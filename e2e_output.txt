hack/run-e2e-test.sh
Oct 10 11:54:20.428: INFO: The --provider flag is not set. Continuing as if --provider=skeleton had been used.
Running Suite: CNS CSI Driver End-to-End Tests
==============================================
Random Seed: [1m1570733650[0m - Will randomize all specs
Will run [1m26[0m of [1m45[0m specs

[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1m[csi-common-e2e] verify labels are created in CNS after updating pvc and/or pv with new labels[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:109[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 11:54:20.428: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
Oct 10 11:54:20.611: INFO: Found PodSecurityPolicies; assuming PodSecurityPolicy is enabled.
Oct 10 11:54:20.642: INFO: Found ClusterRoles; assuming RBAC is enabled.
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-600
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] [csi-common-e2e] verify labels are created in CNS after updating pvc and/or pv with new labels
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:109
[1mSTEP[0m: Invoking test to verify labels creation
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-7jbjw with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-c489m to be in bound phase
Oct 10 11:54:21.178: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-c489m] to have phase Bound
Oct 10 11:54:21.186: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:23.203: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:25.214: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:27.227: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:29.236: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:31.251: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:33.260: INFO: PersistentVolumeClaim pvc-c489m found but phase is Pending instead of Bound.
Oct 10 11:54:35.271: INFO: PersistentVolumeClaim pvc-c489m found and phase=Bound (14.092552981s)
[1mSTEP[0m: Updating labels map[app:e2e-labels] for pvc pvc-c489m in namespace e2e-volume-label-updates-600
[1mSTEP[0m: Updating labels map[app:e2e-labels] for pv pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be updated for pvc pvc-c489m in namespace e2e-volume-label-updates-600
Oct 10 11:54:37.743: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c2360)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017aa00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017aa50)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 11:54:39.627: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c2870)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017aaf0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017ab40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 11:54:41.609: INFO: queryResult: (*types.CnsQueryResult)(0xc00057f680)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef040)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef090)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 11:54:43.602: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c2a80)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017abe0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017ac30)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 11:54:45.601: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c32c0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017ad20)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017ad70)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be updated for pv pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946
Oct 10 11:54:47.794: INFO: queryResult: (*types.CnsQueryResult)(0xc00057ffb0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "fd3321d3-0c66-48b7-91be-89ed8e9d069b"
   },
   Name: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef130)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-5e9cdbec-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef180)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-c489m",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=28) "e2e-volume-label-updates-600"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 11:54:47.794: INFO: Deleting PersistentVolumeClaim "pvc-c489m"
Oct 10 11:54:49.879: INFO: volume "fd3321d3-0c66-48b7-91be-89ed8e9d069b" has successfully deleted
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 11:54:49.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-600" for this suite.
Oct 10 11:54:55.977: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 11:54:56.306: INFO: namespace e2e-volume-label-updates-600 deletion completed in 6.401577057s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:35.878 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  [csi-common-e2e] verify labels are created in CNS after updating pvc and/or pv with new labels
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:109[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1m[csi-common-e2e] verify podname label is created/deleted when pod with cns volume is created/deleted.[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:247[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 11:54:56.306: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-2872
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] [csi-common-e2e] verify podname label is created/deleted when pod with cns volume is created/deleted.
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:247
[1mSTEP[0m: Invoking test to verify pod name label updates
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-lrgp5 with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-ff5dq to be in bound phase
Oct 10 11:54:56.978: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-ff5dq] to have phase Bound
Oct 10 11:54:57.010: INFO: PersistentVolumeClaim pvc-ff5dq found but phase is Pending instead of Bound.
Oct 10 11:54:59.019: INFO: PersistentVolumeClaim pvc-ff5dq found but phase is Pending instead of Bound.
Oct 10 11:55:01.029: INFO: PersistentVolumeClaim pvc-ff5dq found but phase is Pending instead of Bound.
Oct 10 11:55:03.041: INFO: PersistentVolumeClaim pvc-ff5dq found but phase is Pending instead of Bound.
Oct 10 11:55:05.051: INFO: PersistentVolumeClaim pvc-ff5dq found and phase=Bound (8.072816531s)
[1mSTEP[0m: Creating pod
[1mSTEP[0m: Verify volume: 2607bf4c-570b-4af4-95f3-ea22703e0731 is attached to the node: k8s-node3
[1mSTEP[0m: VM UUID is: 4205159a-5f60-9fd1-e814-468e43711c60 for node: k8s-node3
Oct 10 11:55:31.449: INFO: vmRef: VirtualMachine:vm-99 for the VM uuid: 4205159a-5f60-9fd1-e814-468e43711c60
Oct 10 11:55:31.558: INFO: Found FCDID "2607bf4c-570b-4af4-95f3-ea22703e0731" attached to VM "k8s-node3"
Oct 10 11:55:31.558: INFO: Found the disk "2607bf4c-570b-4af4-95f3-ea22703e0731" is attached to the VM with UUID: "4205159a-5f60-9fd1-e814-468e43711c60"
[1mSTEP[0m: Waiting for pod name to be updated for volume 2607bf4c-570b-4af4-95f3-ea22703e0731 by metadata-syncer
Oct 10 11:55:33.825: INFO: queryResult: (*types.CnsQueryResult)(0xc000acc630)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "2607bf4c-570b-4af4-95f3-ea22703e0731"
   },
   Name: (string) (len=40) "pvc-73f380f4-eb8f-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0002430e0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-73f380f4-eb8f-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243130)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-ff5dq",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-2872"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243180)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=16) "pvc-tester-4s2jn",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-2872"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Deleting the pod
Oct 10 11:55:33.826: INFO: Deleting pod "pvc-tester-4s2jn" in namespace "e2e-volume-label-updates-2872"
Oct 10 11:55:33.839: INFO: Wait up to 5m0s for pod "pvc-tester-4s2jn" to be fully deleted
[1mSTEP[0m: Verify volume is detached from the node
[1mSTEP[0m: VM UUID is: 4205159a-5f60-9fd1-e814-468e43711c60 for node: k8s-node3
Oct 10 11:55:44.155: INFO: vmRef: VirtualMachine:vm-99 for the VM uuid: 4205159a-5f60-9fd1-e814-468e43711c60
Oct 10 11:55:44.268: INFO: Found FCDID "2607bf4c-570b-4af4-95f3-ea22703e0731" attached to VM "k8s-node3"
Oct 10 11:55:44.268: INFO: Found the disk "2607bf4c-570b-4af4-95f3-ea22703e0731" is attached to the VM with UUID: "4205159a-5f60-9fd1-e814-468e43711c60"
Oct 10 11:55:44.268: INFO: Waiting for disk: "2607bf4c-570b-4af4-95f3-ea22703e0731" to be detached from the node :"k8s-node3"
[1mSTEP[0m: VM UUID is: 4205159a-5f60-9fd1-e814-468e43711c60 for node: k8s-node3
Oct 10 11:55:46.160: INFO: vmRef: VirtualMachine:vm-99 for the VM uuid: 4205159a-5f60-9fd1-e814-468e43711c60
Oct 10 11:55:46.265: INFO: Failed to find FCDID "2607bf4c-570b-4af4-95f3-ea22703e0731" attached to VM "k8s-node3"
Oct 10 11:55:46.265: INFO: Disk: 2607bf4c-570b-4af4-95f3-ea22703e0731 successfully detached
[1mSTEP[0m: Waiting for pod name to be deleted for volume 2607bf4c-570b-4af4-95f3-ea22703e0731 by metadata-syncer
Oct 10 11:55:48.484: INFO: waiting for pod name label to be removed by metadata-syncer for volume: "2607bf4c-570b-4af4-95f3-ea22703e0731"
Oct 10 11:55:50.466: INFO: waiting for pod name label to be removed by metadata-syncer for volume: "2607bf4c-570b-4af4-95f3-ea22703e0731"
Oct 10 11:55:52.459: INFO: waiting for pod name label to be removed by metadata-syncer for volume: "2607bf4c-570b-4af4-95f3-ea22703e0731"
Oct 10 11:55:54.459: INFO: waiting for pod name label to be removed by metadata-syncer for volume: "2607bf4c-570b-4af4-95f3-ea22703e0731"
Oct 10 11:55:56.695: INFO: waiting for pod name label to be removed by metadata-syncer for volume: "2607bf4c-570b-4af4-95f3-ea22703e0731"
Oct 10 11:55:58.465: INFO: pod name label is successfully removed
Oct 10 11:55:58.465: INFO: Deleting PersistentVolumeClaim "pvc-ff5dq"
Oct 10 11:56:00.549: INFO: volume "2607bf4c-570b-4af4-95f3-ea22703e0731" has successfully deleted
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 11:56:00.565: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-2872" for this suite.
Oct 10 11:56:06.677: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 11:56:07.057: INFO: namespace e2e-volume-label-updates-2872 deletion completed in 6.477733487s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:70.751 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  [csi-common-e2e] verify podname label is created/deleted when pod with cns volume is created/deleted.
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:247[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1m[csi-common-e2e] Verify CNS volume is deleted after full sync when pv entry is delete[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:274[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 11:56:07.058: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-2454
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] [csi-common-e2e] Verify CNS volume is deleted after full sync when pv entry is delete
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:274
[1mSTEP[0m: Invoking test to verify CNS volume creation
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-8zz72 with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-kkp96 to be in bound phase
Oct 10 11:56:07.731: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-kkp96] to have phase Bound
Oct 10 11:56:07.740: INFO: PersistentVolumeClaim pvc-kkp96 found but phase is Pending instead of Bound.
Oct 10 11:56:09.750: INFO: PersistentVolumeClaim pvc-kkp96 found but phase is Pending instead of Bound.
Oct 10 11:56:11.761: INFO: PersistentVolumeClaim pvc-kkp96 found and phase=Bound (4.030357079s)
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 11:56:12.379: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Deleting PVC pvc-kkp96 in namespace e2e-full-sync-test-2454
[1mSTEP[0m: Deleting the PV pvc-9e1f6a51-eb8f-11e9-ad3e-005056851946
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 11:56:38.462: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for volume 46b441f2-8781-441e-840d-4bcbde2fe84f to be deleted
Oct 10 12:03:05.728: INFO: volume "46b441f2-8781-441e-840d-4bcbde2fe84f" has successfully deleted
[1mSTEP[0m: Deleting FCD: 46b441f2-8781-441e-840d-4bcbde2fe84f
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:03:06.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-2454" for this suite.
Oct 10 12:03:12.497: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:03:12.768: INFO: namespace e2e-full-sync-test-2454 deletion completed in 6.346272648s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:425.710 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  [csi-common-e2e] Verify CNS volume is deleted after full sync when pv entry is delete
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:274[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1mVerify PVC name is removed from PV entry on CNS after PVC is deleted when Reclaim Policy is set to retain.[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:345[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:03:12.768: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-3649
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] Verify PVC name is removed from PV entry on CNS after PVC is deleted when Reclaim Policy is set to retain.
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:345
[1mSTEP[0m: Creating storage class
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: Retain
[1mSTEP[0m: Creating PVC
[1mSTEP[0m: Creating PVC using the Storage Class sc-nwh7l with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-jnvmp to be in bound phase
Oct 10 12:03:13.708: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-jnvmp] to have phase Bound
Oct 10 12:03:13.717: INFO: PersistentVolumeClaim pvc-jnvmp found but phase is Pending instead of Bound.
Oct 10 12:03:15.728: INFO: PersistentVolumeClaim pvc-jnvmp found but phase is Pending instead of Bound.
Oct 10 12:03:17.739: INFO: PersistentVolumeClaim pvc-jnvmp found but phase is Pending instead of Bound.
Oct 10 12:03:19.747: INFO: PersistentVolumeClaim pvc-jnvmp found and phase=Bound (6.03950697s)
[1mSTEP[0m: Deleting pvc pvc-jnvmp in namespace e2e-volume-label-updates-3649
[1mSTEP[0m: Sleeping for 30 seconds to allow PVC deletion
[1mSTEP[0m: Deleting pv pvc-9c05b733-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for volume b1853f79-ee91-4d18-b98e-c3889b53ca70 to be deleted
Oct 10 12:03:52.750: INFO: volume "b1853f79-ee91-4d18-b98e-c3889b53ca70" has successfully deleted
[1mSTEP[0m: Deleting FCD: b1853f79-ee91-4d18-b98e-c3889b53ca70
[1mSTEP[0m: Deleting the Storage Class
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:03:53.197: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-3649" for this suite.
Oct 10 12:03:59.283: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:03:59.733: INFO: namespace e2e-volume-label-updates-3649 deletion completed in 6.523143264s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:46.965 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  Verify PVC name is removed from PV entry on CNS after PVC is deleted when Reclaim Policy is set to retain.
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:345[0m
[90m------------------------------[0m
[36mS[0m[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy[0m 
  [1mVerify dynamic provisioning of PV passes with user specified shared datastore and no storage policy specified in the storage class[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:67[0m
[BeforeEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:03:59.733: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-vsphere-volume-provisioning-no-storage-policy
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-vsphere-volume-provisioning-no-storage-policy-5209
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:56
[It] Verify dynamic provisioning of PV passes with user specified shared datastore and no storage policy specified in the storage class
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:67
[1mSTEP[0m: Invoking Test for user specified Shared Datastore in Storage class for volume provisioning
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[DatastoreURL:ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-zf5pq with disk size  and labels: map[]
[1mSTEP[0m: Expect claim to pass provisioning volume as shared datastore
Oct 10 12:04:00.213: INFO: Waiting up to 1m0s for PersistentVolumeClaims [pvc-7sxl5] to have phase Bound
Oct 10 12:04:00.221: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:02.231: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:04.262: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:06.271: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:08.279: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:10.288: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:12.347: INFO: PersistentVolumeClaim pvc-7sxl5 found but phase is Pending instead of Bound.
Oct 10 12:04:14.357: INFO: PersistentVolumeClaim pvc-7sxl5 found and phase=Bound (14.144032396s)
Oct 10 12:04:14.357: INFO: Deleting PersistentVolumeClaim "pvc-7sxl5"
[AfterEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:04:14.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-vsphere-volume-provisioning-no-storage-policy-5209" for this suite.
Oct 10 12:04:20.499: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:04:20.928: INFO: namespace e2e-vsphere-volume-provisioning-no-storage-policy-5209 deletion completed in 6.503103517s

[32m• [SLOW TEST:21.195 seconds][0m
[csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:47[0m
  Verify dynamic provisioning of PV passes with user specified shared datastore and no storage policy specified in the storage class
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:67[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1mVerify Multiple PVCs are deleted/updated after full sync[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:374[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:04:20.929: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-8591
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] Verify Multiple PVCs are deleted/updated after full sync
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:374
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: Retain
[1mSTEP[0m: Creating PVC using the Storage Class sc-z2s2f with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-65x52 to be in bound phase
Oct 10 12:04:21.561: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-65x52] to have phase Bound
Oct 10 12:04:21.578: INFO: PersistentVolumeClaim pvc-65x52 found but phase is Pending instead of Bound.
Oct 10 12:04:23.586: INFO: PersistentVolumeClaim pvc-65x52 found but phase is Pending instead of Bound.
Oct 10 12:04:25.597: INFO: PersistentVolumeClaim pvc-65x52 found and phase=Bound (4.035202146s)
[1mSTEP[0m: Creating PVC using the Storage Class sc-z2s2f with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-cnp6w to be in bound phase
Oct 10 12:04:25.668: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-cnp6w] to have phase Bound
Oct 10 12:04:25.679: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:27.687: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:29.696: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:31.706: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:33.715: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:35.725: INFO: PersistentVolumeClaim pvc-cnp6w found but phase is Pending instead of Bound.
Oct 10 12:04:37.734: INFO: PersistentVolumeClaim pvc-cnp6w found and phase=Bound (12.066080292s)
[1mSTEP[0m: Creating PVC using the Storage Class sc-z2s2f with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-llg9z to be in bound phase
Oct 10 12:04:37.816: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-llg9z] to have phase Bound
Oct 10 12:04:37.828: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:39.837: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:41.849: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:43.858: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:45.869: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:47.878: INFO: PersistentVolumeClaim pvc-llg9z found but phase is Pending instead of Bound.
Oct 10 12:04:49.887: INFO: PersistentVolumeClaim pvc-llg9z found and phase=Bound (12.071545711s)
[1mSTEP[0m: Creating PVC using the Storage Class sc-z2s2f with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-5hlnh to be in bound phase
Oct 10 12:04:49.961: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-5hlnh] to have phase Bound
Oct 10 12:04:49.972: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:04:51.982: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:04:53.991: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:04:56.000: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:04:58.010: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:05:00.021: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:05:02.031: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:05:04.040: INFO: PersistentVolumeClaim pvc-5hlnh found but phase is Pending instead of Bound.
Oct 10 12:05:06.049: INFO: PersistentVolumeClaim pvc-5hlnh found and phase=Bound (16.087640453s)
[1mSTEP[0m: Creating PVC using the Storage Class sc-z2s2f with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-r7t78 to be in bound phase
Oct 10 12:05:06.123: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-r7t78] to have phase Bound
Oct 10 12:05:06.133: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:08.143: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:10.154: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:12.162: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:14.172: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:16.180: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:18.190: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:20.200: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:22.209: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:24.221: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:26.230: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:28.240: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:30.250: INFO: PersistentVolumeClaim pvc-r7t78 found but phase is Pending instead of Bound.
Oct 10 12:05:32.264: INFO: PersistentVolumeClaim pvc-r7t78 found and phase=Bound (26.140634584s)
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 12:05:32.281: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Deleting pvc pvc-65x52 in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting pvc pvc-cnp6w in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Updating labels map[app:e2e-fullsync] for pvc pvc-llg9z in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Updating labels map[app:e2e-fullsync] for pv pvc-d5651cad-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 12:05:58.424: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for pvc metadata to be deleted for pvc pvc-65x52 in namespace e2e-full-sync-test-8591
Oct 10 12:12:24.773: INFO: queryResult: (*types.CnsQueryResult)(0xc00087e510)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "14a38e53-5d0c-493f-b723-f5182c4d334a"
   },
   Name: (string) (len=40) "pvc-c4777055-eb90-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086c370)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-c4777055-eb90-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Waiting for pvc metadata to be deleted for pvc pvc-cnp6w in namespace e2e-full-sync-test-8591
Oct 10 12:12:26.964: INFO: queryResult: (*types.CnsQueryResult)(0xc0003b1140)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "67c98cec-e338-4ef0-82b5-e9b7ca61406b"
   },
   Name: (string) (len=40) "pvc-c6ea80df-eb90-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0008780a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-c6ea80df-eb90-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Waiting for labels map[app:e2e-fullsync] to be updated for pvc pvc-llg9z in namespace e2e-full-sync-test-8591
Oct 10 12:12:29.152: INFO: queryResult: (*types.CnsQueryResult)(0xc0008a7290)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "24f10bb6-1563-44f1-9fe6-87b94f0a598d"
   },
   Name: (string) (len=40) "pvc-ce2708c1-eb90-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000bac9b0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-ce2708c1-eb90-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000baca00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-llg9z",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=23) "e2e-full-sync-test-8591"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Waiting for labels map[app:e2e-fullsync] to be updated for pv pvc-d5651cad-eb90-11e9-ad3e-005056851946
Oct 10 12:12:31.353: INFO: queryResult: (*types.CnsQueryResult)(0xc0003b0180)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "f8e2b58b-f238-4248-85ed-2a595164fade"
   },
   Name: (string) (len=40) "pvc-d5651cad-eb90-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000bac000)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-5hlnh",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=23) "e2e-full-sync-test-8591"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000bac050)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-d5651cad-eb90-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Deleting pvc pvc-65x52 in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting pvc pvc-cnp6w in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting pvc pvc-llg9z in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting pvc pvc-5hlnh in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting pvc pvc-r7t78 in namespace e2e-full-sync-test-8591
[1mSTEP[0m: Deleting the PV pvc-c4777055-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Deleting the PV pvc-c6ea80df-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Deleting the PV pvc-ce2708c1-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Deleting the PV pvc-d5651cad-eb90-11e9-ad3e-005056851946
[1mSTEP[0m: Deleting the PV pvc-df077f7c-eb90-11e9-ad3e-005056851946
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:12:31.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-8591" for this suite.
Oct 10 12:12:37.854: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:12:38.128: INFO: namespace e2e-full-sync-test-8591 deletion completed in 6.560370338s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:497.199 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  Verify Multiple PVCs are deleted/updated after full sync
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:374[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Volume Filesystem Type Test[0m 
  [1mCSI - verify fstype - default value should be ext4[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:81[0m
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:12:38.128: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename volume-fstype
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in volume-fstype-5798
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:67
[It] CSI - verify fstype - default value should be ext4
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:81
[1mSTEP[0m: Invoking Test for fstype: 
[1mSTEP[0m: Creating Storage Class With Fstype
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[fstype:] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-xdhch with disk size  and labels: map[]
[1mSTEP[0m: Waiting for all claims to be in bound state
Oct 10 12:12:38.794: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-g9864] to have phase Bound
Oct 10 12:12:38.807: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:40.817: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:42.826: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:45.189: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:47.201: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:49.212: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:51.221: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:53.229: INFO: PersistentVolumeClaim pvc-g9864 found but phase is Pending instead of Bound.
Oct 10 12:12:55.238: INFO: PersistentVolumeClaim pvc-g9864 found and phase=Bound (16.444190881s)
[1mSTEP[0m: Creating pod to attach PV to the node
[1mSTEP[0m: Verify volume: 09b83557-0934-4742-8f13-acf97ab83ae8 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 12:13:15.634: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 12:13:15.742: INFO: Found FCDID "09b83557-0934-4742-8f13-acf97ab83ae8" attached to VM "k8s-node1"
Oct 10 12:13:15.742: INFO: Found the disk "09b83557-0934-4742-8f13-acf97ab83ae8" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify the volume is accessible and filesystem type is as expected
Oct 10 12:13:15.742: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-cvq56 --namespace=volume-fstype-5798 -- /bin/cat /mnt/volume1/fstype'
Oct 10 12:13:16.219: INFO: stderr: ""
Oct 10 12:13:16.219: INFO: stdout: "ext4\n"
[1mSTEP[0m: Deleting the pod pvc-tester-cvq56 in namespace volume-fstype-5798
Oct 10 12:13:16.219: INFO: Deleting pod "pvc-tester-cvq56" in namespace "volume-fstype-5798"
Oct 10 12:13:16.229: INFO: Wait up to 5m0s for pod "pvc-tester-cvq56" to be fully deleted
[1mSTEP[0m: Verify volume is detached from the node
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 12:13:52.527: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 12:13:52.643: INFO: Found FCDID "09b83557-0934-4742-8f13-acf97ab83ae8" attached to VM "k8s-node1"
Oct 10 12:13:52.643: INFO: Found the disk "09b83557-0934-4742-8f13-acf97ab83ae8" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
Oct 10 12:13:52.643: INFO: Waiting for disk: "09b83557-0934-4742-8f13-acf97ab83ae8" to be detached from the node :"k8s-node1"
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 12:13:54.525: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 12:13:54.637: INFO: Failed to find FCDID "09b83557-0934-4742-8f13-acf97ab83ae8" attached to VM "k8s-node1"
Oct 10 12:13:54.637: INFO: Disk: 09b83557-0934-4742-8f13-acf97ab83ae8 successfully detached
Oct 10 12:13:54.637: INFO: Deleting PersistentVolumeClaim "pvc-g9864"
[AfterEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:13:54.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "volume-fstype-5798" for this suite.
Oct 10 12:14:00.825: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:14:01.639: INFO: namespace volume-fstype-5798 deletion completed in 6.943289836s

[32m• [SLOW TEST:83.511 seconds][0m
[csi-block-e2e] Volume Filesystem Type Test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:59[0m
  CSI - verify fstype - default value should be ext4
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:81[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1mVerify PVC metadata is deleted in CNS after PVC is deleted in k8s[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:540[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:14:01.639: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-5955
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] Verify PVC metadata is deleted in CNS after PVC is deleted in k8s
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:540
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:764f18f7-ff91-4718-8997-b9cb54b4c715 to sync with pandora
[1mSTEP[0m: Creating the PV with the fcdID 764f18f7-ff91-4718-8997-b9cb54b4c715
Oct 10 12:15:39.150: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:41.080: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:43.076: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:45.081: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:47.071: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:49.078: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:51.072: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:53.077: INFO: waiting for Volume "764f18f7-ff91-4718-8997-b9cb54b4c715" to be created.
Oct 10 12:15:56.837: INFO: volume "764f18f7-ff91-4718-8997-b9cb54b4c715" has successfully created
[1mSTEP[0m: Creating the PVC
Oct 10 12:15:56.902: INFO: Waiting for PV vspherepv-chjv2 to bind to PVC pvc-xckzz
Oct 10 12:15:56.902: INFO: Waiting up to 3m0s for PersistentVolumeClaims [pvc-xckzz] to have phase Bound
Oct 10 12:15:56.922: INFO: PersistentVolumeClaim pvc-xckzz found but phase is Pending instead of Bound.
Oct 10 12:15:58.932: INFO: PersistentVolumeClaim pvc-xckzz found and phase=Bound (2.030602001s)
Oct 10 12:15:58.932: INFO: Waiting up to 3m0s for PersistentVolume vspherepv-chjv2 to have phase Bound
Oct 10 12:15:58.941: INFO: PersistentVolume vspherepv-chjv2 found and phase=Bound (8.84599ms)
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 12:15:58.962: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Deleting pvc pvc-xckzz in namespace e2e-full-sync-test-5955
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 12:16:24.744: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for pvc metadata to be deleted for pvc pvc-xckzz in namespace e2e-full-sync-test-5955
Oct 10 12:22:43.681: INFO: queryResult: (*types.CnsQueryResult)(0xc0007026c0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "764f18f7-ff91-4718-8997-b9cb54b4c715"
   },
   Name: (string) (len=15) "vspherepv-chjv2",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee500)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-chjv2",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "764f18f7-ff91-4718-8997-b9cb54b4c715"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Deleting pv vspherepv-chjv2
[1mSTEP[0m: Deleting FCD: 764f18f7-ff91-4718-8997-b9cb54b4c715
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:22:49.112: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-5955" for this suite.
Oct 10 12:22:55.206: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:22:55.563: INFO: namespace e2e-full-sync-test-5955 deletion completed in 6.439090873s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:533.924 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  Verify PVC metadata is deleted in CNS after PVC is deleted in k8s
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:540[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy[0m 
  [1mVerify dynamic provisioning of PV fails with user specified non-shared datastore and no storage policy specified in the storage class[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:81[0m
[BeforeEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:22:55.563: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-vsphere-volume-provisioning-no-storage-policy
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-vsphere-volume-provisioning-no-storage-policy-2426
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:56
[It] Verify dynamic provisioning of PV fails with user specified non-shared datastore and no storage policy specified in the storage class
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:81
[1mSTEP[0m: Invoking Test for user specified non-shared Datastore in storage class for volume provisioning
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[DatastoreURL:ds:///vmfs/volumes/5d9d4f7c-990ba8fa-61de-02004debe5c5/] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-spgnp with disk size  and labels: map[]
[1mSTEP[0m: Expect claim to fail provisioning volume on non shared datastore
Oct 10 12:22:56.043: INFO: Waiting up to 30s for PersistentVolumeClaims [pvc-zhth4] to have phase Bound
Oct 10 12:22:56.055: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:22:58.066: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:00.075: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:02.084: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:04.097: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:06.106: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:08.115: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:10.125: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:12.133: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:14.145: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:16.154: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:18.165: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:20.180: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:22.189: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Oct 10 12:23:24.198: INFO: PersistentVolumeClaim pvc-zhth4 found but phase is Pending instead of Bound.
Actual failure message: "failed to provision volume with StorageClass \"sc-spgnp\": rpc error: code = Internal desc = Failed to create volume. Error: Datastore: ds:///vmfs/volumes/5d9d4f7c-990ba8fa-61de-02004debe5c5/ specified in the storage class is not accessible to all nodes."
Expected failure message: "failed to provision volume with StorageClass \"sc-spgnp\""
Oct 10 12:23:26.208: INFO: Deleting PersistentVolumeClaim "pvc-zhth4"
[AfterEach] [csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:23:26.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-vsphere-volume-provisioning-no-storage-policy-2426" for this suite.
Oct 10 12:23:32.555: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:23:32.835: INFO: namespace e2e-vsphere-volume-provisioning-no-storage-policy-2426 deletion completed in 6.562786462s

[32m• [SLOW TEST:37.272 seconds][0m
[csi-block-e2e] Datastore Based Volume Provisioning With No Storage Policy
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:47[0m
  Verify dynamic provisioning of PV fails with user specified non-shared datastore and no storage policy specified in the storage class
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_shared_datastore.go:81[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] [csi-common-e2e] Volume Disk Size [0m 
  [1mVerify dynamic provisioning of pv using storageclass with a valid disk size passes[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:77[0m
[BeforeEach] [csi-block-e2e] [csi-common-e2e] Volume Disk Size 
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:23:32.835: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename volume-disksize
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in volume-disksize-6310
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] [csi-common-e2e] Volume Disk Size 
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:52
[It] Verify dynamic provisioning of pv using storageclass with a valid disk size passes
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:77
[1mSTEP[0m: Invoking Test for valid disk size
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[DatastoreURL:ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-lkfpc with disk size 2Gi and labels: map[]
[1mSTEP[0m: Expect claim to provision volume successfully
Oct 10 12:23:33.498: INFO: Waiting up to 1m0s for PersistentVolumeClaims [pvc-n5d87] to have phase Bound
Oct 10 12:23:33.505: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:35.518: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:37.527: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:39.536: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:41.544: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:43.554: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:45.563: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:47.575: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:49.606: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:51.623: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:53.633: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:55.641: INFO: PersistentVolumeClaim pvc-n5d87 found but phase is Pending instead of Bound.
Oct 10 12:23:57.651: INFO: PersistentVolumeClaim pvc-n5d87 found and phase=Bound (24.15295767s)
Oct 10 12:23:57.651: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-n5d87] to have phase Bound
Oct 10 12:23:57.658: INFO: PersistentVolumeClaim pvc-n5d87 found and phase=Bound (7.410319ms)
[1mSTEP[0m: Invoking QueryCNSVolumeWithResult with VolumeID: b71ced24-4e5d-462e-90bd-63efa2440176
[1mSTEP[0m: Verifying disk size specified in PVC in honored
Oct 10 12:23:58.101: INFO: Deleting PersistentVolumeClaim "pvc-n5d87"
Oct 10 12:24:00.185: INFO: volume "b71ced24-4e5d-462e-90bd-63efa2440176" has successfully deleted
[AfterEach] [csi-block-e2e] [csi-common-e2e] Volume Disk Size 
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:24:00.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "volume-disksize-6310" for this suite.
Oct 10 12:24:06.290: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:24:06.576: INFO: namespace volume-disksize-6310 deletion completed in 6.359775712s
[AfterEach] [csi-block-e2e] [csi-common-e2e] Volume Disk Size 
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:70

[32m• [SLOW TEST:33.741 seconds][0m
[csi-block-e2e] [csi-common-e2e] Volume Disk Size 
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:41[0m
  Verify dynamic provisioning of pv using storageclass with a valid disk size passes
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_disksize.go:77[0m
[90m------------------------------[0m
[36mS[0m[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Volume Filesystem Type Test[0m 
  [1mCSI - verify fstype - ext3 formatted volume[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:77[0m
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:24:06.576: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename volume-fstype
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in volume-fstype-6065
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:67
[It] CSI - verify fstype - ext3 formatted volume
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:77
[1mSTEP[0m: Invoking Test for fstype: ext3
[1mSTEP[0m: Creating Storage Class With Fstype
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[fstype:ext3] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-42xhj with disk size  and labels: map[]
[1mSTEP[0m: Waiting for all claims to be in bound state
Oct 10 12:24:07.231: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-2jn8x] to have phase Bound
Oct 10 12:24:07.239: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:09.249: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:11.367: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:13.376: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:15.385: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:17.395: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:19.431: INFO: PersistentVolumeClaim pvc-2jn8x found but phase is Pending instead of Bound.
Oct 10 12:24:21.443: INFO: PersistentVolumeClaim pvc-2jn8x found and phase=Bound (14.212671138s)
[1mSTEP[0m: Creating pod to attach PV to the node
[1mSTEP[0m: Verify volume: 50d11eb5-5725-4ab8-89a2-1a8ffd2a8085 is attached to the node: k8s-node2
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:24:39.891: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:24:40.034: INFO: Found FCDID "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" attached to VM "k8s-node2"
Oct 10 12:24:40.034: INFO: Found the disk "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
[1mSTEP[0m: Verify the volume is accessible and filesystem type is as expected
Oct 10 12:24:40.034: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-v5lbr --namespace=volume-fstype-6065 -- /bin/cat /mnt/volume1/fstype'
Oct 10 12:24:40.595: INFO: stderr: ""
Oct 10 12:24:40.595: INFO: stdout: "ext3\n"
[1mSTEP[0m: Deleting the pod pvc-tester-v5lbr in namespace volume-fstype-6065
Oct 10 12:24:40.595: INFO: Deleting pod "pvc-tester-v5lbr" in namespace "volume-fstype-6065"
Oct 10 12:24:40.751: INFO: Wait up to 5m0s for pod "pvc-tester-v5lbr" to be fully deleted
[1mSTEP[0m: Verify volume is detached from the node
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:25:17.280: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:25:17.397: INFO: Found FCDID "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" attached to VM "k8s-node2"
Oct 10 12:25:17.397: INFO: Found the disk "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
Oct 10 12:25:17.397: INFO: Waiting for disk: "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" to be detached from the node :"k8s-node2"
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:25:19.286: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:25:19.400: INFO: Failed to find FCDID "50d11eb5-5725-4ab8-89a2-1a8ffd2a8085" attached to VM "k8s-node2"
Oct 10 12:25:19.400: INFO: Disk: 50d11eb5-5725-4ab8-89a2-1a8ffd2a8085 successfully detached
Oct 10 12:25:19.400: INFO: Deleting PersistentVolumeClaim "pvc-2jn8x"
[AfterEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:25:19.436: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "volume-fstype-6065" for this suite.
Oct 10 12:25:25.527: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:25:25.859: INFO: namespace volume-fstype-6065 deletion completed in 6.408333932s

[32m• [SLOW TEST:79.283 seconds][0m
[csi-block-e2e] Volume Filesystem Type Test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:59[0m
  CSI - verify fstype - ext3 formatted volume
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:77[0m
[90m------------------------------[0m
[36mS[0m[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1mVerify label updates on statically provisioned volume.[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:465[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:25:25.859: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-7443
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] Verify label updates on statically provisioned volume.
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:465
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:e8bf437a-a5b6-4665-abdc-bca4b8074673 to sync with pandora
[1mSTEP[0m: Creating the PV with the fcdID e8bf437a-a5b6-4665-abdc-bca4b8074673
Oct 10 12:27:01.870: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be created.
Oct 10 12:27:03.832: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be created.
Oct 10 12:27:05.826: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be created.
Oct 10 12:27:07.824: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be created.
Oct 10 12:27:09.835: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be created.
Oct 10 12:27:12.411: INFO: volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" has successfully created
[1mSTEP[0m: Creating the PVC
Oct 10 12:27:12.473: INFO: Waiting for PV vspherepv-tk42v to bind to PVC pvc-tvwms
Oct 10 12:27:12.473: INFO: Waiting up to 3m0s for PersistentVolumeClaims [pvc-tvwms] to have phase Bound
Oct 10 12:27:12.486: INFO: PersistentVolumeClaim pvc-tvwms found but phase is Pending instead of Bound.
Oct 10 12:27:14.496: INFO: PersistentVolumeClaim pvc-tvwms found and phase=Bound (2.022510472s)
Oct 10 12:27:14.496: INFO: Waiting up to 3m0s for PersistentVolume vspherepv-tk42v to have phase Bound
Oct 10 12:27:14.504: INFO: PersistentVolume vspherepv-tk42v found and phase=Bound (8.306194ms)
[1mSTEP[0m: Updating labels map[app:e2e-labels] for pvc pvc-tvwms in namespace e2e-volume-label-updates-7443
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be updated for pvc pvc-tvwms in namespace e2e-volume-label-updates-7443
Oct 10 12:27:16.904: INFO: queryResult: (*types.CnsQueryResult)(0xc0008a7dd0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c690)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c6e0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:19.244: INFO: queryResult: (*types.CnsQueryResult)(0xc0008a7f50)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c780)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c7d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:25.386: INFO: queryResult: (*types.CnsQueryResult)(0xc0003e6b70)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017b2c0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017b310)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:27.841: INFO: queryResult: (*types.CnsQueryResult)(0xc000d180f0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000242000)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002420a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app:e2e-labels] for pv vspherepv-tk42v
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be updated for pv vspherepv-tk42v
Oct 10 12:27:31.414: INFO: queryResult: (*types.CnsQueryResult)(0xc000371110)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00017a050)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00017a0f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:32.158: INFO: queryResult: (*types.CnsQueryResult)(0xc0003b07e0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000242500)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002425a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:35.179: INFO: queryResult: (*types.CnsQueryResult)(0xc0008a7320)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c140)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c190)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "fcd-id",
         Value: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:27:36.315: INFO: queryResult: (*types.CnsQueryResult)(0xc0008a7710)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "e8bf437a-a5b6-4665-abdc-bca4b8074673"
   },
   Name: (string) (len=15) "vspherepv-tk42v",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=58) "ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c2d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-tvwms",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-7443"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2c320)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=15) "vspherepv-tk42v",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) (len=9) "compliant",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) (len=36) "aa6d5a82-1c88-45da-85d3-3d74b91a5bad"
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Deleting PVC pvc-tvwms in namespace e2e-volume-label-updates-7443
[1mSTEP[0m: Deleting the PV vspherepv-tk42v
[1mSTEP[0m: Waiting for volume e8bf437a-a5b6-4665-abdc-bca4b8074673 to be deleted
Oct 10 12:27:38.889: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be deleted.
Oct 10 12:27:40.980: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be deleted.
Oct 10 12:27:43.899: INFO: waiting for Volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" to be deleted.
Oct 10 12:27:44.724: INFO: volume "e8bf437a-a5b6-4665-abdc-bca4b8074673" has successfully deleted
[1mSTEP[0m: Deleting FCD: e8bf437a-a5b6-4665-abdc-bca4b8074673
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:27:46.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-7443" for this suite.
Oct 10 12:27:52.256: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:27:52.563: INFO: namespace e2e-volume-label-updates-7443 deletion completed in 6.381639092s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:146.704 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  Verify label updates on statically provisioned volume.
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:465[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Relocate detached volume [0m 
  [1mVerify relocating detached volume works fine[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/svmotion_detached_volume.go:73[0m
[BeforeEach] [csi-block-e2e] Relocate detached volume 
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:27:52.564: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename svmotion-detached-disk
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svmotion-detached-disk-7610
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Relocate detached volume 
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/svmotion_detached_volume.go:59
[It] Verify relocating detached volume works fine
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/svmotion_detached_volume.go:73
[1mSTEP[0m: Invoking Test for relocating detached volume
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[DatastoreURL:ds:///vmfs/volumes/vsan:5240ba1c561887cc-d01067529c35bc1e/] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-gqvr4 with disk size  and labels: map[]
[1mSTEP[0m: Expect claim to provision volume successfully
Oct 10 12:27:53.634: INFO: Waiting up to 1m0s for PersistentVolumeClaims [pvc-cp685] to have phase Bound
Oct 10 12:27:53.644: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:27:55.654: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:27:57.663: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:27:59.675: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:01.685: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:03.693: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:05.704: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:07.715: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:09.723: INFO: PersistentVolumeClaim pvc-cp685 found but phase is Pending instead of Bound.
Oct 10 12:28:11.734: INFO: PersistentVolumeClaim pvc-cp685 found and phase=Bound (18.100564047s)
Oct 10 12:28:11.734: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-cp685] to have phase Bound
Oct 10 12:28:11.743: INFO: PersistentVolumeClaim pvc-cp685 found and phase=Bound (8.377849ms)
[1mSTEP[0m: Invoking QueryCNSVolumeWithResult with VolumeID: e3926417-e5a2-4311-9f02-8efbce8e2d1a
[1mSTEP[0m: Verifying disk is created on the specified datastore
[1mSTEP[0m: Sleeping for 90 seconds to finish FCD relocation:e3926417-e5a2-4311-9f02-8efbce8e2d1a to sync with pandora
[1mSTEP[0m: Invoking QueryCNSVolumeWithResult with VolumeID: e3926417-e5a2-4311-9f02-8efbce8e2d1a after relocating the disk
[1mSTEP[0m: Verifying disk is relocated to the specified datastore
Oct 10 12:29:49.172: INFO: Deleting PersistentVolumeClaim "pvc-cp685"
[AfterEach] [csi-block-e2e] Relocate detached volume 
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:29:49.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "svmotion-detached-disk-7610" for this suite.
Oct 10 12:29:55.285: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:29:55.587: INFO: namespace svmotion-detached-disk-7610 deletion completed in 6.373572047s

[32m• [SLOW TEST:123.023 seconds][0m
[csi-block-e2e] Relocate detached volume 
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/svmotion_detached_volume.go:45[0m
  Verify relocating detached volume works fine
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/svmotion_detached_volume.go:73[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1m[csi-common-e2e] verify labels are removed in CNS after removing them from pvc and/or pv[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:171[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:29:55.587: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-4929
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] [csi-common-e2e] verify labels are removed in CNS after removing them from pvc and/or pv
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:171
[1mSTEP[0m: Invoking test to verify labels deletion
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-k5mrz with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-8j6qx to be in bound phase
Oct 10 12:29:56.233: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-8j6qx] to have phase Bound
Oct 10 12:29:56.248: INFO: PersistentVolumeClaim pvc-8j6qx found but phase is Pending instead of Bound.
Oct 10 12:29:58.256: INFO: PersistentVolumeClaim pvc-8j6qx found but phase is Pending instead of Bound.
Oct 10 12:30:00.264: INFO: PersistentVolumeClaim pvc-8j6qx found but phase is Pending instead of Bound.
Oct 10 12:30:02.276: INFO: PersistentVolumeClaim pvc-8j6qx found but phase is Pending instead of Bound.
Oct 10 12:30:04.285: INFO: PersistentVolumeClaim pvc-8j6qx found and phase=Bound (8.051720766s)
[1mSTEP[0m: Updating labels map[app:e2e-labels] for pv pvc-573465ed-eb94-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be updated for pv pvc-573465ed-eb94-11e9-ad3e-005056851946
Oct 10 12:30:06.618: INFO: queryResult: (*types.CnsQueryResult)(0xc000c92720)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2ccd0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:08.544: INFO: queryResult: (*types.CnsQueryResult)(0xc00095bc50)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef1d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:10.546: INFO: queryResult: (*types.CnsQueryResult)(0xc000d1cb10)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=1 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000d3b860)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:12.551: INFO: queryResult: (*types.CnsQueryResult)(0xc000c93110)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2cdc0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2ce10)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:14.539: INFO: queryResult: (*types.CnsQueryResult)(0xc0003869c0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef310)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef360)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:16.655: INFO: queryResult: (*types.CnsQueryResult)(0xc000387050)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef400)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef450)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:18.570: INFO: queryResult: (*types.CnsQueryResult)(0xc000387590)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef4f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef540)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:20.593: INFO: queryResult: (*types.CnsQueryResult)(0xc000c935c0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2ceb0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2cf00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:22.577: INFO: queryResult: (*types.CnsQueryResult)(0xc000d901b0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b2cfa0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b2cff0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:24.581: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c25d0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef5e0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef630)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:26.549: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c2a50)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef6d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ef950)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Fetching updated pvc pvc-8j6qx in namespace e2e-volume-label-updates-4929
[1mSTEP[0m: Deleting labels map[app:e2e-labels] for pvc pvc-8j6qx in namespace e2e-volume-label-updates-4929
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be deleted for pvc pvc-8j6qx in namespace e2e-volume-label-updates-4929
Oct 10 12:30:28.816: INFO: queryResult: (*types.CnsQueryResult)(0xc000d1dcb0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000d3b9f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000d3ba40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Fetching updated pv pvc-573465ed-eb94-11e9-ad3e-005056851946
[1mSTEP[0m: Deleting labels map[app:e2e-labels] for pv pvc-573465ed-eb94-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app:e2e-labels] to be deleted for pv pvc-573465ed-eb94-11e9-ad3e-005056851946
Oct 10 12:30:31.091: INFO: queryResult: (*types.CnsQueryResult)(0xc0005c3410)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000efcc0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000efd10)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:33.085: INFO: queryResult: (*types.CnsQueryResult)(0xc000954780)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000d3bb30)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=10) "e2e-labels"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000d3bb80)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:35.077: INFO: queryResult: (*types.CnsQueryResult)(0xc000954ba0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "c83a202e-e199-48b8-84e0-94182f04d897"
   },
   Name: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000d3bc20)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-573465ed-eb94-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000d3bc70)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-8j6qx",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-4929"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:30:35.077: INFO: Deleting PersistentVolumeClaim "pvc-8j6qx"
Oct 10 12:30:37.161: INFO: volume "c83a202e-e199-48b8-84e0-94182f04d897" has successfully deleted
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:30:37.175: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-4929" for this suite.
Oct 10 12:30:43.281: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:30:43.619: INFO: namespace e2e-volume-label-updates-4929 deletion completed in 6.424609686s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:48.032 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  [csi-common-e2e] verify labels are removed in CNS after removing them from pvc and/or pv
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:171[0m
[90m------------------------------[0m
[36mS[0m[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Storage Policy Based Volume Provisioning[0m 
  [1m[csi-common-e2e] Verify dynamic volume provisioning fails when storage policy specified in the storageclass is compliant for non-shared datastores[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:94[0m
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:30:43.619: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-spbm-policy
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-spbm-policy-8283
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:55
[It] [csi-common-e2e] Verify dynamic volume provisioning fails when storage policy specified in the storageclass is compliant for non-shared datastores
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:94
[1mSTEP[0m: Invoking test for storage policy: LocalDatastoresPolicy
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[StoragePolicyName:LocalDatastoresPolicy] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-bxtpb with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim to be in bound phase
Oct 10 12:30:44.244: INFO: Waiting up to 30s for PersistentVolumeClaims [pvc-9xq7c] to have phase Bound
Oct 10 12:30:44.254: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:46.264: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:48.273: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:50.282: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:52.289: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:54.299: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:56.308: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:30:58.320: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:00.328: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:02.341: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:04.349: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:06.359: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:08.423: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:10.614: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:12.734: INFO: PersistentVolumeClaim pvc-9xq7c found but phase is Pending instead of Bound.
Oct 10 12:31:14.735: INFO: Deleting PersistentVolumeClaim "pvc-9xq7c"
[1mSTEP[0m: EventList item: "waiting for a volume to be created, either by external provisioner \"csi.vsphere.vmware.com\" or manually created by system administrator" 

[1mSTEP[0m: EventList item: "External provisioner is provisioning volume for claim \"e2e-spbm-policy-8283/pvc-9xq7c\"" 

[1mSTEP[0m: EventList item: "failed to provision volume with StorageClass \"sc-bxtpb\": rpc error: code = Internal desc = Failed to create volume. Error: CnsFault error: No compatible datastore found for storagePolicy: ab3d749c-f468-4c60-8fa4-7446c0c0d6a9" 

[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:31:15.751: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-spbm-policy-8283" for this suite.
Oct 10 12:31:22.891: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:31:23.590: INFO: namespace e2e-spbm-policy-8283 deletion completed in 7.406250135s
[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:69

[32m• [SLOW TEST:39.971 seconds][0m
[csi-block-e2e] Storage Policy Based Volume Provisioning
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:48[0m
  [csi-common-e2e] Verify dynamic volume provisioning fails when storage policy specified in the storageclass is compliant for non-shared datastores
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:94[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Volume Filesystem Type Test[0m 
  [1mCSI - verify invalid fstype[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:85[0m
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:31:23.591: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename volume-fstype
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in volume-fstype-109
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:67
[It] CSI - verify invalid fstype
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:85
[1mSTEP[0m: Creating Storage Class With Invalid Fstype
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[fstype:ext10] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-kvsgr with disk size  and labels: map[]
[1mSTEP[0m: Waiting for all claims to be in bound state
Oct 10 12:31:24.253: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-xv5qx] to have phase Bound
Oct 10 12:31:24.272: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:26.285: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:28.294: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:30.304: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:32.315: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:34.323: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:36.332: INFO: PersistentVolumeClaim pvc-xv5qx found but phase is Pending instead of Bound.
Oct 10 12:31:38.342: INFO: PersistentVolumeClaim pvc-xv5qx found and phase=Bound (14.088668015s)
[1mSTEP[0m: Creating pod to attach PV to the node
[1mSTEP[0m: EventList item: "Successfully assigned volume-fstype-109/pvc-tester-v7fwj to k8s-node2" 

[1mSTEP[0m: EventList item: "AttachVolume.Attach succeeded for volume \"pvc-8bab0845-eb94-11e9-ad3e-005056851946\" " 

[1mSTEP[0m: EventList item: "MountVolume.MountDevice failed for volume \"pvc-8bab0845-eb94-11e9-ad3e-005056851946\" : rpc error: code = Internal desc = error with format and mount during staging: mount failed: exit status 32\nmounting arguments: -t ext10 -o defaults /dev/disk/by-id/wwn-0x6000c299d4183b87cfc0e4ed74dd0420 /var/lib/kubelet/plugins/kubernetes.io/csi/pv/pvc-8bab0845-eb94-11e9-ad3e-005056851946/globalmount\noutput: mount: /var/lib/kubelet/plugins/kubernetes.io/csi/pv/pvc-8bab0845-eb94-11e9-ad3e-005056851946/globalmount: unknown filesystem type 'ext10'.\n" 

[1mSTEP[0m: podNodeName:  podName: pvc-tester-v7fwj
[1mSTEP[0m: Refetch the POD: podNodeName: k8s-node2 podName: pvc-tester-v7fwj
[1mSTEP[0m: Deleting the pod pvc-tester-v7fwj in namespace volume-fstype-109
Oct 10 12:36:38.466: INFO: Deleting pod "pvc-tester-v7fwj" in namespace "volume-fstype-109"
Oct 10 12:36:38.477: INFO: Wait up to 5m0s for pod "pvc-tester-v7fwj" to be fully deleted
[1mSTEP[0m: Verify volume is detached from the node
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:36:48.804: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:36:48.914: INFO: Found FCDID "d93a0d17-0eed-4cbe-a8c7-4fa978f6baec" attached to VM "k8s-node2"
Oct 10 12:36:48.914: INFO: Found the disk "d93a0d17-0eed-4cbe-a8c7-4fa978f6baec" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
Oct 10 12:36:48.914: INFO: Waiting for disk: "d93a0d17-0eed-4cbe-a8c7-4fa978f6baec" to be detached from the node :"k8s-node2"
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:36:50.780: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:36:50.888: INFO: Failed to find FCDID "d93a0d17-0eed-4cbe-a8c7-4fa978f6baec" attached to VM "k8s-node2"
Oct 10 12:36:50.888: INFO: Disk: d93a0d17-0eed-4cbe-a8c7-4fa978f6baec successfully detached
Oct 10 12:36:50.888: INFO: Deleting PersistentVolumeClaim "pvc-xv5qx"
[AfterEach] [csi-block-e2e] Volume Filesystem Type Test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:36:50.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "volume-fstype-109" for this suite.
Oct 10 12:36:57.007: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:36:57.327: INFO: namespace volume-fstype-109 deletion completed in 6.39666033s

[32m• [SLOW TEST:333.736 seconds][0m
[csi-block-e2e] Volume Filesystem Type Test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:59[0m
  CSI - verify invalid fstype
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/vsphere_volume_fstype.go:85[0m
[90m------------------------------[0m
[0m[csi-block-e2e] [csi-common-e2e] statefulset[0m 
  [1mvSphere statefulset testing[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:86[0m
[BeforeEach] [csi-block-e2e] [csi-common-e2e] statefulset
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:36:57.327: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-vsphere-statefulset
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-vsphere-statefulset-874
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] [csi-common-e2e] statefulset
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:63
[It] vSphere statefulset testing
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:86
[1mSTEP[0m: Creating StorageClass for Statefulset
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating statefulset
Oct 10 12:36:57.912: INFO: Parsing statefulset from tests/e2e/testing-manifests/statefulset/nginx/statefulset.yaml
Oct 10 12:36:57.920: INFO: Parsing service from tests/e2e/testing-manifests/statefulset/nginx/service.yaml
Oct 10 12:36:57.921: INFO: creating web service
Oct 10 12:36:57.974: INFO: creating statefulset e2e-vsphere-statefulset-874/web with 3 replicas and selector &LabelSelector{MatchLabels:map[string]string{app: nginx,},MatchExpressions:[],}
Oct 10 12:36:58.036: INFO: Found 0 stateful pods, waiting for 3
Oct 10 12:37:08.048: INFO: Found 1 stateful pods, waiting for 3
Oct 10 12:37:18.047: INFO: Found 1 stateful pods, waiting for 3
Oct 10 12:37:28.046: INFO: Found 2 stateful pods, waiting for 3
Oct 10 12:37:38.046: INFO: Found 2 stateful pods, waiting for 3
Oct 10 12:37:48.049: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:37:48.049: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:37:48.049: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 12:37:58.051: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:37:58.051: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:37:58.051: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 12:38:08.048: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:08.048: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:08.048: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 12:38:18.048: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:18.048: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:18.048: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 12:38:28.047: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:28.047: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:28.047: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 12:38:38.348: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:38.348: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:38.348: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 12:38:38.348: INFO: Waiting for statefulset status.replicas updated to 3
Oct 10 12:38:38.365: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-0 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 12:38:39.101: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 12:38:39.101: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:37 /usr/share/nginx/html\n"
Oct 10 12:38:39.101: INFO: stdout of ls -idlh /usr/share/nginx/html on web-0:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:37 /usr/share/nginx/html

Oct 10 12:38:39.101: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-1 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 12:38:39.733: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 12:38:39.733: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:37 /usr/share/nginx/html\n"
Oct 10 12:38:39.733: INFO: stdout of ls -idlh /usr/share/nginx/html on web-1:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:37 /usr/share/nginx/html

Oct 10 12:38:39.733: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-2 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 12:38:40.313: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 12:38:40.313: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:38 /usr/share/nginx/html\n"
Oct 10 12:38:40.313: INFO: stdout of ls -idlh /usr/share/nginx/html on web-2:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 19:38 /usr/share/nginx/html

Oct 10 12:38:40.325: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-0 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 12:38:40.865: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 12:38:40.865: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 12:38:40.865: INFO: stdout of find /usr/share/nginx/html on web-0: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 12:38:40.865: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-1 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 12:38:41.442: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 12:38:41.442: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 12:38:41.442: INFO: stdout of find /usr/share/nginx/html on web-1: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 12:38:41.442: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-2 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 12:38:41.942: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 12:38:41.942: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 12:38:41.942: INFO: stdout of find /usr/share/nginx/html on web-2: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 12:38:41.953: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-0 -- /bin/sh -x -c touch /usr/share/nginx/html/1570736318356931061'
Oct 10 12:38:42.432: INFO: stderr: "+ touch /usr/share/nginx/html/1570736318356931061\n"
Oct 10 12:38:42.432: INFO: stdout: ""
Oct 10 12:38:42.432: INFO: stdout of touch /usr/share/nginx/html/1570736318356931061 on web-0: 
Oct 10 12:38:42.432: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-1 -- /bin/sh -x -c touch /usr/share/nginx/html/1570736318356931061'
Oct 10 12:38:42.939: INFO: stderr: "+ touch /usr/share/nginx/html/1570736318356931061\n"
Oct 10 12:38:42.939: INFO: stdout: ""
Oct 10 12:38:42.939: INFO: stdout of touch /usr/share/nginx/html/1570736318356931061 on web-1: 
Oct 10 12:38:42.939: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-vsphere-statefulset-874 web-2 -- /bin/sh -x -c touch /usr/share/nginx/html/1570736318356931061'
Oct 10 12:38:43.496: INFO: stderr: "+ touch /usr/share/nginx/html/1570736318356931061\n"
Oct 10 12:38:43.497: INFO: stdout: ""
Oct 10 12:38:43.497: INFO: stdout of touch /usr/share/nginx/html/1570736318356931061 on web-2: 
[1mSTEP[0m: successfully verified metadata of the volume "9633ae19-f41f-413e-9e86-a8efee83c601"
[1mSTEP[0m: successfully verified metadata of the volume "b51a488c-9864-4e80-afb1-2f0989fca22f"
[1mSTEP[0m: successfully verified metadata of the volume "4fe4c1b9-8bf7-43f4-8849-f065c487820b"
[1mSTEP[0m: Scaling down statefulsets to number of Replica: 2
Oct 10 12:38:44.245: INFO: Scaling statefulset web to 2
Oct 10 12:38:54.329: INFO: Waiting for statefulset status.replicas updated to 2
[1mSTEP[0m: Verify Volumes are detached from Nodes after Statefulsets is scaled down
[1mSTEP[0m: VM UUID is: 4205159a-5f60-9fd1-e814-468e43711c60 for node: k8s-node3
Oct 10 12:38:56.679: INFO: vmRef: VirtualMachine:vm-99 for the VM uuid: 4205159a-5f60-9fd1-e814-468e43711c60
Oct 10 12:38:56.791: INFO: Failed to find FCDID "4fe4c1b9-8bf7-43f4-8849-f065c487820b" attached to VM "k8s-node3"
Oct 10 12:38:56.791: INFO: Disk: 4fe4c1b9-8bf7-43f4-8849-f065c487820b successfully detached
[1mSTEP[0m: successfully verified metadata of the volume "9633ae19-f41f-413e-9e86-a8efee83c601"
[1mSTEP[0m: successfully verified metadata of the volume "b51a488c-9864-4e80-afb1-2f0989fca22f"
[1mSTEP[0m: Scaling up statefulsets to number of Replica: 3
Oct 10 12:38:57.254: INFO: Scaling statefulset web to 3
Oct 10 12:38:57.356: INFO: Waiting for statefulset status.replicas updated to 3
Oct 10 12:38:57.365: INFO: Waiting for statefulset status.replicas updated to 3
Oct 10 12:38:57.372: INFO: Waiting for stateful set status.readyReplicas to become 3, currently 2
Oct 10 12:39:07.393: INFO: Waiting for stateful set status.readyReplicas to become 3, currently 2
[1mSTEP[0m: Verify all volumes are attached to Nodes after Statefulsets is scaled up
[1mSTEP[0m: Verify scale up operation should not introduced new volume
[1mSTEP[0m: Verify volume: 9633ae19-f41f-413e-9e86-a8efee83c601 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 12:39:19.718: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 12:39:19.830: INFO: Found FCDID "9633ae19-f41f-413e-9e86-a8efee83c601" attached to VM "k8s-node1"
Oct 10 12:39:19.830: INFO: Found the disk "9633ae19-f41f-413e-9e86-a8efee83c601" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: After scale up, verify the attached volumes match those in CNS Cache
[1mSTEP[0m: successfully verified metadata of the volume "9633ae19-f41f-413e-9e86-a8efee83c601"
[1mSTEP[0m: Verify scale up operation should not introduced new volume
[1mSTEP[0m: Verify volume: b51a488c-9864-4e80-afb1-2f0989fca22f is attached to the node: k8s-node2
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:39:22.361: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:39:22.473: INFO: Found FCDID "b51a488c-9864-4e80-afb1-2f0989fca22f" attached to VM "k8s-node2"
Oct 10 12:39:22.473: INFO: Found the disk "b51a488c-9864-4e80-afb1-2f0989fca22f" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
[1mSTEP[0m: After scale up, verify the attached volumes match those in CNS Cache
[1mSTEP[0m: successfully verified metadata of the volume "b51a488c-9864-4e80-afb1-2f0989fca22f"
[1mSTEP[0m: Verify scale up operation should not introduced new volume
[1mSTEP[0m: Verify volume: 4fe4c1b9-8bf7-43f4-8849-f065c487820b is attached to the node: k8s-node3
[1mSTEP[0m: VM UUID is: 4205159a-5f60-9fd1-e814-468e43711c60 for node: k8s-node3
Oct 10 12:39:25.004: INFO: vmRef: VirtualMachine:vm-99 for the VM uuid: 4205159a-5f60-9fd1-e814-468e43711c60
Oct 10 12:39:25.112: INFO: Found FCDID "4fe4c1b9-8bf7-43f4-8849-f065c487820b" attached to VM "k8s-node3"
Oct 10 12:39:25.112: INFO: Found the disk "4fe4c1b9-8bf7-43f4-8849-f065c487820b" is attached to the VM with UUID: "4205159a-5f60-9fd1-e814-468e43711c60"
[1mSTEP[0m: After scale up, verify the attached volumes match those in CNS Cache
[1mSTEP[0m: successfully verified metadata of the volume "4fe4c1b9-8bf7-43f4-8849-f065c487820b"
[1mSTEP[0m: Deleting all statefulsets in namespace: e2e-vsphere-statefulset-874
Oct 10 12:39:25.315: INFO: Scaling statefulset web to 0
Oct 10 12:39:45.420: INFO: Waiting for statefulset status.replicas updated to 0
Oct 10 12:39:45.427: INFO: Deleting statefulset web
Oct 10 12:39:45.496: INFO: Deleting pvc: www-web-0 with volume pvc-52a0b1a6-eb95-11e9-ad3e-005056851946
Oct 10 12:39:45.516: INFO: Deleting pvc: www-web-1 with volume pvc-641f9bfa-eb95-11e9-ad3e-005056851946
Oct 10 12:39:45.541: INFO: Deleting pvc: www-web-2 with volume pvc-7057c246-eb95-11e9-ad3e-005056851946
Oct 10 12:39:45.580: INFO: Still waiting for pvs of statefulset to disappear:
pvc-52a0b1a6-eb95-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-641f9bfa-eb95-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-7057c246-eb95-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
Oct 10 12:39:55.588: INFO: Still waiting for pvs of statefulset to disappear:
pvc-52a0b1a6-eb95-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
[AfterEach] [csi-block-e2e] [csi-common-e2e] statefulset
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:40:05.600: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-vsphere-statefulset-874" for this suite.
Oct 10 12:40:11.690: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:40:11.988: INFO: namespace e2e-vsphere-statefulset-874 deletion completed in 6.37446863s
[AfterEach] [csi-block-e2e] [csi-common-e2e] statefulset
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:80

[32m• [SLOW TEST:194.661 seconds][0m
[csi-block-e2e] [csi-common-e2e] statefulset
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:54[0m
  vSphere statefulset testing
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/statefulsets.go:86[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Storage Policy Based Volume Provisioning[0m 
  [1mVerify non-existing SPBM policy is not honored for dynamic volume provisioning using storageclass[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:117[0m
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:40:11.988: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-spbm-policy
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-spbm-policy-7508
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:55
[It] Verify non-existing SPBM policy is not honored for dynamic volume provisioning using storageclass
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:117
[1mSTEP[0m: Invoking test for SPBM policy: e2e-spbm-policy-7508
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[StoragePolicyName:e2e-spbm-policy-7508] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-7fvmk with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim to be in bound phase
Oct 10 12:40:12.648: INFO: Waiting up to 30s for PersistentVolumeClaims [pvc-kp6mp] to have phase Bound
Oct 10 12:40:12.659: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:14.670: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:16.680: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:18.690: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:20.701: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:22.711: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:24.719: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:26.730: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:28.741: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:30.752: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:32.765: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:34.777: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:36.787: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:38.796: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:40.805: INFO: PersistentVolumeClaim pvc-kp6mp found but phase is Pending instead of Bound.
Oct 10 12:40:42.806: INFO: Deleting PersistentVolumeClaim "pvc-kp6mp"
[1mSTEP[0m: EventList item: "waiting for a volume to be created, either by external provisioner \"csi.vsphere.vmware.com\" or manually created by system administrator" 

[1mSTEP[0m: EventList item: "External provisioner is provisioning volume for claim \"e2e-spbm-policy-7508/pvc-kp6mp\"" 

[1mSTEP[0m: EventList item: "failed to provision volume with StorageClass \"sc-7fvmk\": rpc error: code = Internal desc = Failed to create volume. Error: no pbm profile found with name: \"e2e-spbm-policy-7508\"" 

[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:40:42.859: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-spbm-policy-7508" for this suite.
Oct 10 12:40:48.948: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:40:49.323: INFO: namespace e2e-spbm-policy-7508 deletion completed in 6.451683158s
[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:69

[32m• [SLOW TEST:37.335 seconds][0m
[csi-block-e2e] Storage Policy Based Volume Provisioning
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:48[0m
  Verify non-existing SPBM policy is not honored for dynamic volume provisioning using storageclass
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:117[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1m[csi-common-e2e] Verify labels are created in CNS after updating pvc and/or pv with new labels[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:196[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:40:49.323: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-8081
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] [csi-common-e2e] Verify labels are created in CNS after updating pvc and/or pv with new labels
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:196
[1mSTEP[0m: Invoking test to verify labels creation
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-cj69m with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim pvc-whbjv to be in bound phase
Oct 10 12:40:50.003: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-whbjv] to have phase Bound
Oct 10 12:40:50.013: INFO: PersistentVolumeClaim pvc-whbjv found but phase is Pending instead of Bound.
Oct 10 12:40:52.023: INFO: PersistentVolumeClaim pvc-whbjv found but phase is Pending instead of Bound.
Oct 10 12:40:54.032: INFO: PersistentVolumeClaim pvc-whbjv found but phase is Pending instead of Bound.
Oct 10 12:40:56.043: INFO: PersistentVolumeClaim pvc-whbjv found and phase=Bound (6.039997226s)
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 12:40:56.060: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Updating labels map[app:e2e-fullsync] for pvc pvc-whbjv in namespace e2e-full-sync-test-8081
[1mSTEP[0m: Updating labels map[app:e2e-fullsync] for pv pvc-dce19a25-eb95-11e9-ad3e-005056851946
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 12:41:22.718: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for labels map[app:e2e-fullsync] to be updated for pvc pvc-whbjv in namespace e2e-full-sync-test-8081
Oct 10 12:47:48.900: INFO: queryResult: (*types.CnsQueryResult)(0xc000ece9f0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "ac2ba40b-9da6-4aa8-8110-675f52f1d571"
   },
   Name: (string) (len=40) "pvc-dce19a25-eb95-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000878280)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-dce19a25-eb95-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0008782d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-whbjv",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=23) "e2e-full-sync-test-8081"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Waiting for labels map[app:e2e-fullsync] to be updated for pv pvc-dce19a25-eb95-11e9-ad3e-005056851946
Oct 10 12:47:51.098: INFO: queryResult: (*types.CnsQueryResult)(0xc000ecf0b0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "ac2ba40b-9da6-4aa8-8110-675f52f1d571"
   },
   Name: (string) (len=40) "pvc-dce19a25-eb95-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=2 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000878410)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-dce19a25-eb95-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000878460)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "pvc-whbjv",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=12) "e2e-fullsync"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=23) "e2e-full-sync-test-8081"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 2048
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 12:47:51.098: INFO: Deleting PersistentVolumeClaim "pvc-whbjv"
Oct 10 12:47:53.176: INFO: volume "ac2ba40b-9da6-4aa8-8110-675f52f1d571" has successfully deleted
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:47:53.188: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-8081" for this suite.
Oct 10 12:47:59.276: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:47:59.623: INFO: namespace e2e-full-sync-test-8081 deletion completed in 6.422130392s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:430.300 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  [csi-common-e2e] Verify labels are created in CNS after updating pvc and/or pv with new labels
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:196[0m
[90m------------------------------[0m
[36mS[0m[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Storage Policy Based Volume Provisioning[0m 
  [1m[csi-common-e2e] Verify dynamic volume provisioning works when storage policy specified in the storageclass is compliant for shared datastores[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:75[0m
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:47:59.623: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-spbm-policy
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-spbm-policy-5076
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:55
[It] [csi-common-e2e] Verify dynamic volume provisioning works when storage policy specified in the storageclass is compliant for shared datastores
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:75
[1mSTEP[0m: Invoking test for storage policy: vSAN Default Storage Policy
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass [""] With scParameters: map[StoragePolicyName:vSAN Default Storage Policy] and allowedTopologies: [] and ReclaimPolicy: 
[1mSTEP[0m: Creating PVC using the Storage Class sc-27k6c with disk size  and labels: map[]
[1mSTEP[0m: Waiting for claim to be in bound phase
[1mSTEP[0m: Expect claim to pass provisioning volume as shared datastore
Oct 10 12:48:00.341: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-nh7bl] to have phase Bound
Oct 10 12:48:00.353: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:02.360: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:04.370: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:06.381: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:08.390: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:10.400: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:12.408: INFO: PersistentVolumeClaim pvc-nh7bl found but phase is Pending instead of Bound.
Oct 10 12:48:14.418: INFO: PersistentVolumeClaim pvc-nh7bl found and phase=Bound (14.076251133s)
[1mSTEP[0m: Verifying if volume is provisioned using specified storage policy
Oct 10 12:48:14.435: INFO: Verifying volume: 8511c54b-53e3-42c8-b961-20342ea0ad50 is created using storage policy: vSAN Default Storage Policy
Oct 10 12:48:14.697: INFO: storage policy id: aa6d5a82-1c88-45da-85d3-3d74b91a5bad for storage policy name is: vSAN Default Storage Policy
Oct 10 12:48:15.944: INFO: Volume: 8511c54b-53e3-42c8-b961-20342ea0ad50 is associated with storage policy: aa6d5a82-1c88-45da-85d3-3d74b91a5bad
[1mSTEP[0m: Creating pod to attach PV to the node
[1mSTEP[0m: Verify volume: 8511c54b-53e3-42c8-b961-20342ea0ad50 is attached to the node: k8s-node2
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:48:26.323: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:48:26.434: INFO: Found FCDID "8511c54b-53e3-42c8-b961-20342ea0ad50" attached to VM "k8s-node2"
Oct 10 12:48:26.434: INFO: Found the disk "8511c54b-53e3-42c8-b961-20342ea0ad50" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
[1mSTEP[0m: Deleting the pod pvc-tester-sl2vz in namespace e2e-spbm-policy-5076
Oct 10 12:48:26.434: INFO: Deleting pod "pvc-tester-sl2vz" in namespace "e2e-spbm-policy-5076"
Oct 10 12:48:26.446: INFO: Wait up to 5m0s for pod "pvc-tester-sl2vz" to be fully deleted
[1mSTEP[0m: Verify volume: 8511c54b-53e3-42c8-b961-20342ea0ad50 is detached to the node: k8s-node2
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:48:38.893: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:48:39.005: INFO: Found FCDID "8511c54b-53e3-42c8-b961-20342ea0ad50" attached to VM "k8s-node2"
Oct 10 12:48:39.005: INFO: Found the disk "8511c54b-53e3-42c8-b961-20342ea0ad50" is attached to the VM with UUID: "4205cbc2-aee6-e821-49da-889262f9462c"
Oct 10 12:48:39.005: INFO: Waiting for disk: "8511c54b-53e3-42c8-b961-20342ea0ad50" to be detached from the node :"k8s-node2"
[1mSTEP[0m: VM UUID is: 4205cbc2-aee6-e821-49da-889262f9462c for node: k8s-node2
Oct 10 12:48:40.913: INFO: vmRef: VirtualMachine:vm-98 for the VM uuid: 4205cbc2-aee6-e821-49da-889262f9462c
Oct 10 12:48:41.025: INFO: Failed to find FCDID "8511c54b-53e3-42c8-b961-20342ea0ad50" attached to VM "k8s-node2"
Oct 10 12:48:41.025: INFO: Disk: 8511c54b-53e3-42c8-b961-20342ea0ad50 successfully detached
Oct 10 12:48:41.025: INFO: Deleting PersistentVolumeClaim "pvc-nh7bl"
[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:48:41.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-spbm-policy-5076" for this suite.
Oct 10 12:48:47.144: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:48:47.467: INFO: namespace e2e-spbm-policy-5076 deletion completed in 6.400377387s
[AfterEach] [csi-block-e2e] Storage Policy Based Volume Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:69

[32m• [SLOW TEST:47.844 seconds][0m
[csi-block-e2e] Storage Policy Based Volume Provisioning
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:48[0m
  [csi-common-e2e] Verify dynamic volume provisioning works when storage policy specified in the storageclass is compliant for shared datastores
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/storagepolicy.go:75[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1mVerify CNS volume is created after full sync when pv entry is present[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:128[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:48:47.467: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-5655
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] Verify CNS volume is created after full sync when pv entry is present
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:128
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:6b04f8ea-f8eb-44db-8404-4e1018463b87 to sync with pandora
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 12:50:23.088: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Creating the PV with the fcdID 6b04f8ea-f8eb-44db-8404-4e1018463b87
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 12:50:48.912: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for volume 6b04f8ea-f8eb-44db-8404-4e1018463b87 to be created
Oct 10 12:57:07.780: INFO: volume "6b04f8ea-f8eb-44db-8404-4e1018463b87" has successfully created
[1mSTEP[0m: Deleting the PV vspherepv-mc8bk
[1mSTEP[0m: Deleting FCD: 6b04f8ea-f8eb-44db-8404-4e1018463b87
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 12:57:14.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-5655" for this suite.
Oct 10 12:57:20.329: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 12:57:20.625: INFO: namespace e2e-full-sync-test-5655 deletion completed in 6.384465795s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:513.157 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  Verify CNS volume is created after full sync when pv entry is present
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:128[0m
[90m------------------------------[0m
[36mS[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1mScale down driver deployment to zero replica and verify PV metadata is created in CNS[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:623[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 12:57:20.625: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-6521
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] Scale down driver deployment to zero replica and verify PV metadata is created in CNS
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:623
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:5ad1aae1-f36a-45ce-a60e-b96e679221e4 to sync with pandora
[1mSTEP[0m: Scaling down the csi driver to zero replica
[1mSTEP[0m: Waiting for update operation on deployment to take effect
[1mSTEP[0m: Successfully scaled down the csi driver deployment:vsphere-csi-controller to zero replicas
[1mSTEP[0m: Creating the PV with the fcdID 5ad1aae1-f36a-45ce-a60e-b96e679221e4
[1mSTEP[0m: Scaling up the csi driver to one replica
[1mSTEP[0m: Waiting for update operation on deployment to take effect
[1mSTEP[0m: Successfully scaled up the csi driver deployment:vsphere-csi-controller to one replica
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Waiting for volume 5ad1aae1-f36a-45ce-a60e-b96e679221e4 to be created
Oct 10 13:06:50.651: INFO: volume "5ad1aae1-f36a-45ce-a60e-b96e679221e4" has successfully created
[1mSTEP[0m: Deleting the PV vspherepv-h8zww
[1mSTEP[0m: Deleting FCD: 5ad1aae1-f36a-45ce-a60e-b96e679221e4
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 13:06:52.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-6521" for this suite.
Oct 10 13:06:58.099: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 13:06:58.422: INFO: namespace e2e-full-sync-test-6521 deletion completed in 6.398091557s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:577.797 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  Scale down driver deployment to zero replica and verify PV metadata is created in CNS
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:623[0m
[90m------------------------------[0m
[0m[csi-block-e2e] Basic Static Provisioning[0m 
  [1mVerify basic static provisioning workflow[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:129[0m
[BeforeEach] [csi-block-e2e] Basic Static Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 13:06:58.422: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-csistaticprovision
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-csistaticprovision-2089
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] Basic Static Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:55
[It] Verify basic static provisioning workflow
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:129
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:e7c6fc4e-936a-4baa-b4d6-3556c48f0102 to sync with pandora
[1mSTEP[0m: Creating the PV
Oct 10 13:08:35.081: INFO: waiting for Volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" to be created.
Oct 10 13:08:37.045: INFO: waiting for Volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" to be created.
Oct 10 13:08:39.041: INFO: waiting for Volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" to be created.
Oct 10 13:08:41.035: INFO: waiting for Volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" to be created.
Oct 10 13:08:43.042: INFO: waiting for Volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" to be created.
Oct 10 13:08:45.992: INFO: volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" has successfully created
[1mSTEP[0m: Creating the PVC
Oct 10 13:08:46.057: INFO: Waiting for PV vspherepv-5jn9h to bind to PVC pvc-6fbxz
Oct 10 13:08:46.057: INFO: Waiting up to 3m0s for PersistentVolumeClaims [pvc-6fbxz] to have phase Bound
Oct 10 13:08:46.071: INFO: PersistentVolumeClaim pvc-6fbxz found but phase is Pending instead of Bound.
Oct 10 13:08:48.080: INFO: PersistentVolumeClaim pvc-6fbxz found and phase=Bound (2.023645349s)
Oct 10 13:08:48.080: INFO: Waiting up to 3m0s for PersistentVolume vspherepv-5jn9h to have phase Bound
Oct 10 13:08:48.088: INFO: PersistentVolume vspherepv-5jn9h found and phase=Bound (7.906149ms)
[1mSTEP[0m: Verifying CNS entry is present in cache
[1mSTEP[0m: Creating the Pod
[1mSTEP[0m: Verify volume: e7c6fc4e-936a-4baa-b4d6-3556c48f0102 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:09:08.750: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:09:08.866: INFO: Found FCDID "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" attached to VM "k8s-node1"
Oct 10 13:09:08.867: INFO: Found the disk "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify the volume is accessible and available to the pod by creating an empty file
Oct 10 13:09:08.867: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-wwc55 --namespace=e2e-csistaticprovision-2089 -- /bin/touch /mnt/volume1/emptyFile.txt'
Oct 10 13:09:09.470: INFO: stderr: ""
Oct 10 13:09:09.470: INFO: stdout: ""
[1mSTEP[0m: Verify container volume metadata is present in CNS cache
[1mSTEP[0m: Invoking QueryCNSVolume with VolumeID: e7c6fc4e-936a-4baa-b4d6-3556c48f0102
[1mSTEP[0m: Verify container volume metadata is matching the one in CNS cache
[1mSTEP[0m: successfully verified metadata of the volume "e7c6fc4e-936a-4baa-b4d6-3556c48f0102"
[1mSTEP[0m: Deleting the Pod
Oct 10 13:09:10.734: INFO: Deleting pod "pvc-tester-wwc55" in namespace "e2e-csistaticprovision-2089"
Oct 10 13:09:10.748: INFO: Wait up to 5m0s for pod "pvc-tester-wwc55" to be fully deleted
[1mSTEP[0m: Verify volume is detached from the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:09:27.061: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:09:27.177: INFO: Failed to find FCDID "e7c6fc4e-936a-4baa-b4d6-3556c48f0102" attached to VM "k8s-node1"
Oct 10 13:09:27.177: INFO: Disk: e7c6fc4e-936a-4baa-b4d6-3556c48f0102 successfully detached
[1mSTEP[0m: Deleting the PV Claim
Oct 10 13:09:27.177: INFO: Deleting PersistentVolumeClaim "pvc-6fbxz"
[1mSTEP[0m: Verify PV should be deleted automatically
Oct 10 13:09:27.187: INFO: Waiting up to 30s for PersistentVolume vspherepv-5jn9h to get deleted
Oct 10 13:09:27.197: INFO: PersistentVolume vspherepv-5jn9h found and phase=Bound (9.659916ms)
Oct 10 13:09:29.207: INFO: PersistentVolume vspherepv-5jn9h found and phase=Released (2.019120814s)
Oct 10 13:09:31.216: INFO: PersistentVolume vspherepv-5jn9h found and phase=Released (4.028775986s)
Oct 10 13:09:33.227: INFO: PersistentVolume vspherepv-5jn9h was removed
[AfterEach] [csi-block-e2e] Basic Static Provisioning
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 13:09:33.227: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-csistaticprovision-2089" for this suite.
Oct 10 13:09:39.322: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 13:09:39.670: INFO: namespace e2e-csistaticprovision-2089 deletion completed in 6.427177133s
[AfterEach] [csi-block-e2e] Basic Static Provisioning
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:94
[1mSTEP[0m: Performing test cleanup

[32m• [SLOW TEST:161.248 seconds][0m
[csi-block-e2e] Basic Static Provisioning
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:38[0m
  Verify basic static provisioning workflow
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/csi_static_provisioning_basic.go:129[0m
[90m------------------------------[0m
[0m[sig-storage] [csi-block-e2e] Volume Operations Storm[0m 
  [1mcreate/delete pod with many volumes and verify no attach/detach call should fail[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/operationstorm.go:110[0m
[BeforeEach] [sig-storage] [csi-block-e2e] Volume Operations Storm
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 13:09:39.671: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename volume-ops-storm
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in volume-ops-storm-4309
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [sig-storage] [csi-block-e2e] Volume Operations Storm
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/operationstorm.go:68
[It] create/delete pod with many volumes and verify no attach/detach call should fail
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/operationstorm.go:110
[1mSTEP[0m: Running test with VOLUME_OPS_SCALE: 5
[1mSTEP[0m: Creating Storage Class
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating PVCs using the Storage Class
[1mSTEP[0m: Waiting for all claims to be in bound state
Oct 10 13:09:40.561: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-fktrb] to have phase Bound
Oct 10 13:09:40.577: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:42.595: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:44.604: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:46.615: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:48.626: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:50.637: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:52.645: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:54.653: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:56.667: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:09:58.677: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:00.686: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:02.697: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:04.708: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:06.717: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:08.726: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:10.742: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:12.753: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:14.762: INFO: PersistentVolumeClaim pvc-fktrb found but phase is Pending instead of Bound.
Oct 10 13:10:16.771: INFO: PersistentVolumeClaim pvc-fktrb found and phase=Bound (36.210438438s)
Oct 10 13:10:16.787: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-m8j4k] to have phase Bound
Oct 10 13:10:16.806: INFO: PersistentVolumeClaim pvc-m8j4k found and phase=Bound (18.224921ms)
Oct 10 13:10:16.820: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-5vl89] to have phase Bound
Oct 10 13:10:16.827: INFO: PersistentVolumeClaim pvc-5vl89 found and phase=Bound (6.732151ms)
Oct 10 13:10:16.839: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-jg9ln] to have phase Bound
Oct 10 13:10:16.846: INFO: PersistentVolumeClaim pvc-jg9ln found and phase=Bound (6.498565ms)
Oct 10 13:10:16.859: INFO: Waiting up to 5m0s for PersistentVolumeClaims [pvc-tkff6] to have phase Bound
Oct 10 13:10:16.865: INFO: PersistentVolumeClaim pvc-tkff6 found and phase=Bound (6.030092ms)
[1mSTEP[0m: Creating pod to attach PVs to the node
[1mSTEP[0m: Verify the volumes are attached to the node vm
[1mSTEP[0m: Verify volume: 50b97585-6e9c-4948-8a42-f8a0f20dba39 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:41.252: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:41.362: INFO: Found FCDID "50b97585-6e9c-4948-8a42-f8a0f20dba39" attached to VM "k8s-node1"
Oct 10 13:10:41.362: INFO: Found the disk "50b97585-6e9c-4948-8a42-f8a0f20dba39" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify volume: f1904c31-deed-4a0a-aca7-7105ff2a2358 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:41.649: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:41.770: INFO: Found FCDID "f1904c31-deed-4a0a-aca7-7105ff2a2358" attached to VM "k8s-node1"
Oct 10 13:10:41.770: INFO: Found the disk "f1904c31-deed-4a0a-aca7-7105ff2a2358" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify volume: a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7 is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:42.051: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:42.185: INFO: Found FCDID "a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7" attached to VM "k8s-node1"
Oct 10 13:10:42.185: INFO: Found the disk "a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify volume: 7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:42.493: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:42.604: INFO: Found FCDID "7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c" attached to VM "k8s-node1"
Oct 10 13:10:42.604: INFO: Found the disk "7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify volume: 54cfbcd6-384c-49bf-b16c-27558fad078f is attached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:42.883: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:43.039: INFO: Found FCDID "54cfbcd6-384c-49bf-b16c-27558fad078f" attached to VM "k8s-node1"
Oct 10 13:10:43.039: INFO: Found the disk "54cfbcd6-384c-49bf-b16c-27558fad078f" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
[1mSTEP[0m: Verify all volumes are accessible in the pod
Oct 10 13:10:43.039: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-ctzhm --namespace=volume-ops-storm-4309 -- /bin/touch /mnt/volume1/emptyFile.txt'
Oct 10 13:10:43.605: INFO: stderr: ""
Oct 10 13:10:43.605: INFO: stdout: ""
Oct 10 13:10:43.605: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-ctzhm --namespace=volume-ops-storm-4309 -- /bin/touch /mnt/volume2/emptyFile.txt'
Oct 10 13:10:44.117: INFO: stderr: ""
Oct 10 13:10:44.117: INFO: stdout: ""
Oct 10 13:10:44.117: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-ctzhm --namespace=volume-ops-storm-4309 -- /bin/touch /mnt/volume3/emptyFile.txt'
Oct 10 13:10:44.632: INFO: stderr: ""
Oct 10 13:10:44.632: INFO: stdout: ""
Oct 10 13:10:44.632: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-ctzhm --namespace=volume-ops-storm-4309 -- /bin/touch /mnt/volume4/emptyFile.txt'
Oct 10 13:10:45.116: INFO: stderr: ""
Oct 10 13:10:45.116: INFO: stdout: ""
Oct 10 13:10:45.116: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec pvc-tester-ctzhm --namespace=volume-ops-storm-4309 -- /bin/touch /mnt/volume5/emptyFile.txt'
Oct 10 13:10:45.609: INFO: stderr: ""
Oct 10 13:10:45.609: INFO: stdout: ""
[1mSTEP[0m: Deleting pod
Oct 10 13:10:45.609: INFO: Deleting pod "pvc-tester-ctzhm" in namespace "volume-ops-storm-4309"
Oct 10 13:10:45.622: INFO: Wait up to 5m0s for pod "pvc-tester-ctzhm" to be fully deleted
[1mSTEP[0m: Verify volumes are detached from the node
[1mSTEP[0m: Verify volume: 50b97585-6e9c-4948-8a42-f8a0f20dba39 is detached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:51.932: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:52.042: INFO: Found FCDID "50b97585-6e9c-4948-8a42-f8a0f20dba39" attached to VM "k8s-node1"
Oct 10 13:10:52.042: INFO: Found the disk "50b97585-6e9c-4948-8a42-f8a0f20dba39" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
Oct 10 13:10:52.042: INFO: Waiting for disk: "50b97585-6e9c-4948-8a42-f8a0f20dba39" to be detached from the node :"k8s-node1"
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:53.929: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:54.052: INFO: Found FCDID "50b97585-6e9c-4948-8a42-f8a0f20dba39" attached to VM "k8s-node1"
Oct 10 13:10:54.052: INFO: Found the disk "50b97585-6e9c-4948-8a42-f8a0f20dba39" is attached to the VM with UUID: "4205b64b-a87f-1cce-7c08-efef4e568577"
Oct 10 13:10:54.052: INFO: Waiting for disk: "50b97585-6e9c-4948-8a42-f8a0f20dba39" to be detached from the node :"k8s-node1"
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:55.971: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:56.088: INFO: Failed to find FCDID "50b97585-6e9c-4948-8a42-f8a0f20dba39" attached to VM "k8s-node1"
Oct 10 13:10:56.088: INFO: Disk: 50b97585-6e9c-4948-8a42-f8a0f20dba39 successfully detached
[1mSTEP[0m: Verify volume: f1904c31-deed-4a0a-aca7-7105ff2a2358 is detached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:10:58.368: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:10:58.477: INFO: Failed to find FCDID "f1904c31-deed-4a0a-aca7-7105ff2a2358" attached to VM "k8s-node1"
Oct 10 13:10:58.477: INFO: Disk: f1904c31-deed-4a0a-aca7-7105ff2a2358 successfully detached
[1mSTEP[0m: Verify volume: a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7 is detached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:11:00.764: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:11:00.870: INFO: Failed to find FCDID "a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7" attached to VM "k8s-node1"
Oct 10 13:11:00.870: INFO: Disk: a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7 successfully detached
[1mSTEP[0m: Verify volume: 7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c is detached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:11:03.164: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:11:03.279: INFO: Failed to find FCDID "7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c" attached to VM "k8s-node1"
Oct 10 13:11:03.280: INFO: Disk: 7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c successfully detached
[1mSTEP[0m: Verify volume: 54cfbcd6-384c-49bf-b16c-27558fad078f is detached to the node: k8s-node1
[1mSTEP[0m: VM UUID is: 4205b64b-a87f-1cce-7c08-efef4e568577 for node: k8s-node1
Oct 10 13:11:05.563: INFO: vmRef: VirtualMachine:vm-97 for the VM uuid: 4205b64b-a87f-1cce-7c08-efef4e568577
Oct 10 13:11:05.677: INFO: Failed to find FCDID "54cfbcd6-384c-49bf-b16c-27558fad078f" attached to VM "k8s-node1"
Oct 10 13:11:05.677: INFO: Disk: 54cfbcd6-384c-49bf-b16c-27558fad078f successfully detached
[AfterEach] [sig-storage] [csi-block-e2e] Volume Operations Storm
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 13:11:05.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "volume-ops-storm-4309" for this suite.
Oct 10 13:11:19.786: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 13:11:20.121: INFO: namespace volume-ops-storm-4309 deletion completed in 14.409370907s
[AfterEach] [sig-storage] [csi-block-e2e] Volume Operations Storm
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/operationstorm.go:92
[1mSTEP[0m: Deleting all PVCs
Oct 10 13:11:20.121: INFO: Deleting PersistentVolumeClaim "pvc-fktrb"
Oct 10 13:11:20.129: INFO: Deleting PersistentVolumeClaim "pvc-m8j4k"
Oct 10 13:11:20.137: INFO: Deleting PersistentVolumeClaim "pvc-5vl89"
Oct 10 13:11:20.144: INFO: Deleting PersistentVolumeClaim "pvc-jg9ln"
Oct 10 13:11:20.152: INFO: Deleting PersistentVolumeClaim "pvc-tkff6"
[1mSTEP[0m: Verify PVs, volumes are deleted from CNS
Oct 10 13:11:20.161: INFO: Waiting up to 5m0s for PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 to get deleted
Oct 10 13:11:20.168: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (7.246303ms)
Oct 10 13:11:22.178: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (2.016971595s)
Oct 10 13:11:24.190: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (4.029407346s)
Oct 10 13:11:26.199: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (6.037779914s)
Oct 10 13:11:28.207: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (8.046002748s)
Oct 10 13:11:30.217: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 found and phase=Released (10.056326847s)
Oct 10 13:11:32.228: INFO: PersistentVolume pvc-e43e1510-eb99-11e9-ad3e-005056851946 was removed
Oct 10 13:11:34.370: INFO: volume "50b97585-6e9c-4948-8a42-f8a0f20dba39" has successfully deleted
Oct 10 13:11:34.370: INFO: Waiting up to 5m0s for PersistentVolume pvc-e4468e2b-eb99-11e9-ad3e-005056851946 to get deleted
Oct 10 13:11:34.379: INFO: PersistentVolume pvc-e4468e2b-eb99-11e9-ad3e-005056851946 was removed
Oct 10 13:11:36.492: INFO: volume "f1904c31-deed-4a0a-aca7-7105ff2a2358" has successfully deleted
Oct 10 13:11:36.492: INFO: Waiting up to 5m0s for PersistentVolume pvc-e44f02a9-eb99-11e9-ad3e-005056851946 to get deleted
Oct 10 13:11:36.509: INFO: PersistentVolume pvc-e44f02a9-eb99-11e9-ad3e-005056851946 was removed
Oct 10 13:11:38.625: INFO: volume "a25dd1e1-62bc-4e5b-8876-7f5aeb6695f7" has successfully deleted
Oct 10 13:11:38.625: INFO: Waiting up to 5m0s for PersistentVolume pvc-e4578f6a-eb99-11e9-ad3e-005056851946 to get deleted
Oct 10 13:11:38.633: INFO: PersistentVolume pvc-e4578f6a-eb99-11e9-ad3e-005056851946 was removed
Oct 10 13:11:40.747: INFO: volume "7a2a740c-8a22-49df-9b27-2c6ac8ae5c7c" has successfully deleted
Oct 10 13:11:40.747: INFO: Waiting up to 5m0s for PersistentVolume pvc-e46039ec-eb99-11e9-ad3e-005056851946 to get deleted
Oct 10 13:11:40.757: INFO: PersistentVolume pvc-e46039ec-eb99-11e9-ad3e-005056851946 was removed
Oct 10 13:11:42.873: INFO: volume "54cfbcd6-384c-49bf-b16c-27558fad078f" has successfully deleted

[32m• [SLOW TEST:123.203 seconds][0m
[sig-storage] [csi-block-e2e] Volume Operations Storm
[90m/root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/storage/utils/framework.go:22[0m
  create/delete pod with many volumes and verify no attach/detach call should fail
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/operationstorm.go:110[0m
[90m------------------------------[0m
[0m[csi-block-e2e] full-sync-test[0m 
  [1mVerify PVC metadata is created in CNS after PVC is created in k8s[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:461[0m
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 13:11:42.874: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-full-sync-test
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-full-sync-test-7317
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:81
[It] Verify PVC metadata is created in CNS after PVC is created in k8s
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:461
[1mSTEP[0m: Creating FCD Disk
[1mSTEP[0m: Sleeping for 90 seconds to allow newly created FCD:aee22159-9c1e-450e-a21f-99c9d19dfbf8 to sync with pandora
[1mSTEP[0m: Creating the PV with the fcdID aee22159-9c1e-450e-a21f-99c9d19dfbf8
Oct 10 13:13:20.856: INFO: waiting for Volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" to be created.
Oct 10 13:13:22.819: INFO: waiting for Volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" to be created.
Oct 10 13:13:24.858: INFO: waiting for Volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" to be created.
Oct 10 13:13:26.815: INFO: waiting for Volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" to be created.
Oct 10 13:13:28.808: INFO: waiting for Volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" to be created.
Oct 10 13:13:31.815: INFO: volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8" has successfully created
[1mSTEP[0m: Stopping vsan-health on the vCenter host

Oct 10 13:13:31.815: INFO: Invoking command service-control --stop vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to completely shutdown
[1mSTEP[0m: Creating the PVC
Oct 10 13:13:57.696: INFO: Waiting for PV vspherepv-qjdcq to bind to PVC pvc-j7bbb
Oct 10 13:13:57.696: INFO: Waiting up to 3m0s for PersistentVolumeClaims [pvc-j7bbb] to have phase Bound
Oct 10 13:13:57.710: INFO: PersistentVolumeClaim pvc-j7bbb found but phase is Pending instead of Bound.
Oct 10 13:13:59.721: INFO: PersistentVolumeClaim pvc-j7bbb found and phase=Bound (2.024844716s)
Oct 10 13:13:59.721: INFO: Waiting up to 3m0s for PersistentVolume vspherepv-qjdcq to have phase Bound
Oct 10 13:13:59.729: INFO: PersistentVolume vspherepv-qjdcq found and phase=Bound (7.72849ms)
[1mSTEP[0m: Starting vsan-health on the vCenter host

Oct 10 13:13:59.745: INFO: Invoking command service-control --start vsan-health on vCenter host 10.193.50.202:22
[1mSTEP[0m: Sleeping for 15 seconds to allow vsan-health to come up again
[1mSTEP[0m: Sleeping for 350 seconds to allow full sync finish
[1mSTEP[0m: Verify container volume metadata is matching the one in CNS cache
[1mSTEP[0m: successfully verified metadata of the volume "aee22159-9c1e-450e-a21f-99c9d19dfbf8"
[1mSTEP[0m: Deleting pvc pvc-j7bbb in namespace e2e-full-sync-test-7317
[1mSTEP[0m: Deleting FCD: aee22159-9c1e-450e-a21f-99c9d19dfbf8
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 13:20:17.936: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-full-sync-test-7317" for this suite.
Oct 10 13:20:24.024: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 13:20:24.368: INFO: namespace e2e-full-sync-test-7317 deletion completed in 6.415541799s
[AfterEach] [csi-block-e2e] full-sync-test
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:122

[32m• [SLOW TEST:521.494 seconds][0m
[csi-block-e2e] full-sync-test
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:52[0m
  Verify PVC metadata is created in CNS after PVC is created in k8s
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/fullsynctest.go:461[0m
[90m------------------------------[0m
[0m[csi-block-e2e] label-updates[0m 
  [1m[csi-common-e2e] Verify label updates on PVC and PV attached to a stateful set.[0m
  [37m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:591[0m
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:149
[1mSTEP[0m: Creating a kubernetes client
Oct 10 13:20:24.368: INFO: >>> kubeConfig: /root/.kube/config
[1mSTEP[0m: Building a namespace api object, basename e2e-volume-label-updates
[1mSTEP[0m: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-volume-label-updates-8485
[1mSTEP[0m: Waiting for a default service account to be provisioned in namespace
[BeforeEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:78
[It] [csi-common-e2e] Verify label updates on PVC and PV attached to a stateful set.
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:591
[1mSTEP[0m: CNS_TEST: Running for vanilla k8s setup
[1mSTEP[0m: Creating StorageClass for Statefulset
[1mSTEP[0m: Creating statefulset
Oct 10 13:20:24.942: INFO: Parsing statefulset from tests/e2e/testing-manifests/statefulset/nginx/statefulset.yaml
Oct 10 13:20:24.943: INFO: Parsing service from tests/e2e/testing-manifests/statefulset/nginx/service.yaml
Oct 10 13:20:24.944: INFO: creating web service
Oct 10 13:20:25.011: INFO: creating statefulset e2e-volume-label-updates-8485/web with 3 replicas and selector &LabelSelector{MatchLabels:map[string]string{app: nginx,},MatchExpressions:[],}
Oct 10 13:20:25.072: INFO: Found 0 stateful pods, waiting for 3
Oct 10 13:20:35.084: INFO: Found 1 stateful pods, waiting for 3
Oct 10 13:20:45.080: INFO: Found 1 stateful pods, waiting for 3
Oct 10 13:20:55.092: INFO: Found 1 stateful pods, waiting for 3
Oct 10 13:21:05.086: INFO: Found 2 stateful pods, waiting for 3
Oct 10 13:21:15.091: INFO: Found 2 stateful pods, waiting for 3
Oct 10 13:21:25.083: INFO: Found 2 stateful pods, waiting for 3
Oct 10 13:21:35.082: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:35.083: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:35.083: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 13:21:45.085: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:45.085: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:45.085: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 13:21:55.085: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:55.085: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:21:55.085: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Pending - Ready=false
Oct 10 13:22:05.082: INFO: Waiting for pod web-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:22:05.082: INFO: Waiting for pod web-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:22:05.082: INFO: Waiting for pod web-2 to enter Running - Ready=true, currently Running - Ready=true
Oct 10 13:22:05.082: INFO: Waiting for statefulset status.replicas updated to 3
Oct 10 13:22:05.100: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-0 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 13:22:05.792: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 13:22:05.792: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:20 /usr/share/nginx/html\n"
Oct 10 13:22:05.792: INFO: stdout of ls -idlh /usr/share/nginx/html on web-0:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:20 /usr/share/nginx/html

Oct 10 13:22:05.792: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-1 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 13:22:06.550: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 13:22:06.551: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:21 /usr/share/nginx/html\n"
Oct 10 13:22:06.551: INFO: stdout of ls -idlh /usr/share/nginx/html on web-1:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:21 /usr/share/nginx/html

Oct 10 13:22:06.551: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-2 -- /bin/sh -x -c ls -idlh /usr/share/nginx/html'
Oct 10 13:22:07.203: INFO: stderr: "+ ls -idlh /usr/share/nginx/html\n"
Oct 10 13:22:07.203: INFO: stdout: "      2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:21 /usr/share/nginx/html\n"
Oct 10 13:22:07.203: INFO: stdout of ls -idlh /usr/share/nginx/html on web-2:       2 drwxr-xr-x    3 root     root        4.0K Oct 10 20:21 /usr/share/nginx/html

Oct 10 13:22:07.211: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-0 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 13:22:07.816: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 13:22:07.816: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 13:22:07.816: INFO: stdout of find /usr/share/nginx/html on web-0: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 13:22:07.816: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-1 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 13:22:08.435: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 13:22:08.435: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 13:22:08.435: INFO: stdout of find /usr/share/nginx/html on web-1: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 13:22:08.435: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-2 -- /bin/sh -x -c find /usr/share/nginx/html'
Oct 10 13:22:09.110: INFO: stderr: "+ find /usr/share/nginx/html\n"
Oct 10 13:22:09.110: INFO: stdout: "/usr/share/nginx/html\n/usr/share/nginx/html/lost+found\n"
Oct 10 13:22:09.110: INFO: stdout of find /usr/share/nginx/html on web-2: /usr/share/nginx/html
/usr/share/nginx/html/lost+found

Oct 10 13:22:09.136: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-0 -- /bin/sh -x -c touch /usr/share/nginx/html/1570738925092105817'
Oct 10 13:22:09.764: INFO: stderr: "+ touch /usr/share/nginx/html/1570738925092105817\n"
Oct 10 13:22:09.764: INFO: stdout: ""
Oct 10 13:22:09.764: INFO: stdout of touch /usr/share/nginx/html/1570738925092105817 on web-0: 
Oct 10 13:22:09.764: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-1 -- /bin/sh -x -c touch /usr/share/nginx/html/1570738925092105817'
Oct 10 13:22:10.305: INFO: stderr: "+ touch /usr/share/nginx/html/1570738925092105817\n"
Oct 10 13:22:10.305: INFO: stdout: ""
Oct 10 13:22:10.305: INFO: stdout of touch /usr/share/nginx/html/1570738925092105817 on web-1: 
Oct 10 13:22:10.306: INFO: Running '/bin/kubectl --kubeconfig=/root/.kube/config exec --namespace=e2e-volume-label-updates-8485 web-2 -- /bin/sh -x -c touch /usr/share/nginx/html/1570738925092105817'
Oct 10 13:22:10.948: INFO: stderr: "+ touch /usr/share/nginx/html/1570738925092105817\n"
Oct 10 13:22:10.948: INFO: stdout: ""
Oct 10 13:22:10.948: INFO: stdout of touch /usr/share/nginx/html/1570738925092105817 on web-2: 
[1mSTEP[0m: Updating labels map[app-pvc:e2e-labels-pvc] for pvc www-web-0 in namespace e2e-volume-label-updates-8485
[1mSTEP[0m: Waiting for labels map[app-pvc:e2e-labels-pvc] to be updated for pvc www-web-0 in namespace e2e-volume-label-updates-8485
Oct 10 13:22:13.392: INFO: queryResult: (*types.CnsQueryResult)(0xc000e5cba0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b947d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b948c0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94910)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:15.349: INFO: queryResult: (*types.CnsQueryResult)(0xc000ea4d20)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086d680)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086d6d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086d720)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:17.298: INFO: queryResult: (*types.CnsQueryResult)(0xc000ea5200)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086d860)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086d8b0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086d900)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:19.318: INFO: queryResult: (*types.CnsQueryResult)(0xc000e84fc0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000242780)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002427d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242820)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:21.288: INFO: queryResult: (*types.CnsQueryResult)(0xc000ea5950)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086d9a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086d9f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086da40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pvc:e2e-labels-pvc] for pvc www-web-1 in namespace e2e-volume-label-updates-8485
[1mSTEP[0m: Waiting for labels map[app-pvc:e2e-labels-pvc] to be updated for pvc www-web-1 in namespace e2e-volume-label-updates-8485
Oct 10 13:22:23.571: INFO: queryResult: (*types.CnsQueryResult)(0xc000e5d050)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "53c60f15-0e26-4dae-83f6-dab37c465b19"
   },
   Name: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b94a50)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94aa0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-1",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94af0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-1",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:25.574: INFO: queryResult: (*types.CnsQueryResult)(0xc000eba270)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "53c60f15-0e26-4dae-83f6-dab37c465b19"
   },
   Name: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086df90)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000878000)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-1",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000878050)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-1",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:27.575: INFO: queryResult: (*types.CnsQueryResult)(0xc000e5d1d0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "53c60f15-0e26-4dae-83f6-dab37c465b19"
   },
   Name: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b94b90)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94be0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-1",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94c30)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-1",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pvc:e2e-labels-pvc] for pvc www-web-2 in namespace e2e-volume-label-updates-8485
[1mSTEP[0m: Waiting for labels map[app-pvc:e2e-labels-pvc] to be updated for pvc www-web-2 in namespace e2e-volume-label-updates-8485
Oct 10 13:22:29.856: INFO: queryResult: (*types.CnsQueryResult)(0xc000ebaa20)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "08d351c3-ccf4-4775-a6a2-1e55e7927a98"
   },
   Name: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000878230)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0008782d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-2",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000878320)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-2",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:22:31.845: INFO: queryResult: (*types.CnsQueryResult)(0xc000e5def0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "08d351c3-ccf4-4775-a6a2-1e55e7927a98"
   },
   Name: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b94f00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94f50)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-2",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94ff0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-2",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Scaling up statefulsets to number of Replica: 5
Oct 10 13:22:31.845: INFO: Scaling statefulset web to 5
Oct 10 13:23:21.933: INFO: Waiting for statefulset status.replicas updated to 5
Oct 10 13:23:21.991: INFO: Waiting for statefulset status.replicas updated to 5
Oct 10 13:23:22.000: INFO: Waiting for stateful set status.readyReplicas to become 5, currently 4
Oct 10 13:23:32.010: INFO: Waiting for stateful set status.readyReplicas to become 5, currently 4
[1mSTEP[0m: Updating labels map[app-pv:e2e-labels-pv] for pv pvc-648bb8b7-eb9b-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app-pv:e2e-labels-pv] to be updated for pv pvc-648bb8b7-eb9b-11e9-ad3e-005056851946
Oct 10 13:23:44.340: INFO: queryResult: (*types.CnsQueryResult)(0xc000e02750)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000879900)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879950)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0008799a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:46.364: INFO: queryResult: (*types.CnsQueryResult)(0xc000e02960)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000879a40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879a90)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879ae0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:48.353: INFO: queryResult: (*types.CnsQueryResult)(0xc000be2810)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000243900)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243950)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002439a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:50.348: INFO: queryResult: (*types.CnsQueryResult)(0xc000be29f0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000243a40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243a90)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243ae0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:52.354: INFO: queryResult: (*types.CnsQueryResult)(0xc000c57da0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee370)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee410)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee460)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:54.339: INFO: queryResult: (*types.CnsQueryResult)(0xc000be2e40)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000243b80)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243bd0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000243c70)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:56.354: INFO: queryResult: (*types.CnsQueryResult)(0xc000e03950)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000879b80)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879bd0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879c20)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:23:58.357: INFO: queryResult: (*types.CnsQueryResult)(0xc0009d0270)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000879cc0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879d10)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000879d60)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:00.344: INFO: queryResult: (*types.CnsQueryResult)(0xc000e3d980)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee550)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee5f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee640)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:02.349: INFO: queryResult: (*types.CnsQueryResult)(0xc000e420f0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee6e0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee730)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee780)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:04.348: INFO: queryResult: (*types.CnsQueryResult)(0xc000e42570)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "77e279ca-bce5-48ee-bcd4-1aa2124e9832"
   },
   Name: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee820)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-648bb8b7-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "app-pv",
         Value: (string) (len=13) "e2e-labels-pv"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee8c0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-0",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0000ee910)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-0",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pv:e2e-labels-pv] for pv pvc-7bb04b12-eb9b-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app-pv:e2e-labels-pv] to be updated for pv pvc-7bb04b12-eb9b-11e9-ad3e-005056851946
Oct 10 13:24:06.752: INFO: queryResult: (*types.CnsQueryResult)(0xc000e3cb40)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "53c60f15-0e26-4dae-83f6-dab37c465b19"
   },
   Name: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000242000)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002420a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-1",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242230)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-1",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:08.757: INFO: queryResult: (*types.CnsQueryResult)(0xc000e3d6b0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "53c60f15-0e26-4dae-83f6-dab37c465b19"
   },
   Name: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0002423c0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-7bb04b12-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "app-pv",
         Value: (string) (len=13) "e2e-labels-pv"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242460)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-1",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc0002424b0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-1",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pv:e2e-labels-pv] for pv pvc-8ab42c41-eb9b-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app-pv:e2e-labels-pv] to be updated for pv pvc-8ab42c41-eb9b-11e9-ad3e-005056851946
Oct 10 13:24:11.051: INFO: queryResult: (*types.CnsQueryResult)(0xc000503710)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "08d351c3-ccf4-4775-a6a2-1e55e7927a98"
   },
   Name: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc0002427d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242820)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-2",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242870)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-2",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:13.026: INFO: queryResult: (*types.CnsQueryResult)(0xc000be32f0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "08d351c3-ccf4-4775-a6a2-1e55e7927a98"
   },
   Name: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086c460)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-8ab42c41-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "app-pv",
         Value: (string) (len=13) "e2e-labels-pv"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086c640)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-2",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086c690)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-2",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=7) "app-pvc",
         Value: (string) (len=14) "e2e-labels-pvc"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pv:e2e-labels-pv] for pv pvc-b023667d-eb9b-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app-pv:e2e-labels-pv] to be updated for pv pvc-b023667d-eb9b-11e9-ad3e-005056851946
Oct 10 13:24:15.300: INFO: queryResult: (*types.CnsQueryResult)(0xc000be3da0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "9297bacf-9d1f-40c0-beaf-bda281b0720a"
   },
   Name: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086c9b0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086ca00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-3",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086caa0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-3",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:17.302: INFO: queryResult: (*types.CnsQueryResult)(0xc0002a9f80)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "9297bacf-9d1f-40c0-beaf-bda281b0720a"
   },
   Name: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086cb40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086cb90)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-3",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086cbe0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-3",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:19.299: INFO: queryResult: (*types.CnsQueryResult)(0xc0000b5f50)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "9297bacf-9d1f-40c0-beaf-bda281b0720a"
   },
   Name: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc00086cc80)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086ccd0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-3",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc00086cdc0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-3",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:21.293: INFO: queryResult: (*types.CnsQueryResult)(0xc00095a090)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "9297bacf-9d1f-40c0-beaf-bda281b0720a"
   },
   Name: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000242a50)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-b023667d-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "app-pv",
         Value: (string) (len=13) "e2e-labels-pv"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242af0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-3",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000242b40)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-3",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Updating labels map[app-pv:e2e-labels-pv] for pv pvc-c939063e-eb9b-11e9-ad3e-005056851946
[1mSTEP[0m: Waiting for labels map[app-pv:e2e-labels-pv] to be updated for pv pvc-c939063e-eb9b-11e9-ad3e-005056851946
Oct 10 13:24:23.568: INFO: queryResult: (*types.CnsQueryResult)(0xc000471dd0)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "34c6e772-91ce-4b50-b8d3-4092dab0efbc"
   },
   Name: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b945a0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b945f0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-4",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94640)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-4",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:25.588: INFO: queryResult: (*types.CnsQueryResult)(0xc000eba030)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "34c6e772-91ce-4b50-b8d3-4092dab0efbc"
   },
   Name: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b94730)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b947d0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-4",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b948c0)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-4",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

Oct 10 13:24:27.569: INFO: queryResult: (*types.CnsQueryResult)(0xc000eba450)({
 DynamicData: (types.DynamicData) {
 },
 Volumes: ([]types.CnsVolume) (len=1 cap=4) {
  (types.CnsVolume) {
   DynamicData: (types.DynamicData) {
   },
   VolumeId: (types.CnsVolumeId) {
    DynamicData: (types.DynamicData) {
    },
    Id: (string) (len=36) "34c6e772-91ce-4b50-b8d3-4092dab0efbc"
   },
   Name: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
   VolumeType: (string) (len=5) "BLOCK",
   DatastoreUrl: (string) (len=55) "ds:///vmfs/volumes/5d9d4f73-05178362-6f07-02004d26d873/",
   Metadata: (types.CnsVolumeMetadata) {
    DynamicData: (types.DynamicData) {
    },
    ContainerCluster: (types.CnsContainerCluster) {
     DynamicData: (types.DynamicData) {
     },
     ClusterType: (string) (len=10) "KUBERNETES",
     ClusterId: (string) (len=15) "demo-cluster-id",
     VSphereUser: (string) (len=27) "VSPHERE.LOCAL\\Administrator"
    },
    EntityMetadata: ([]types.BaseCnsEntityMetadata) (len=3 cap=4) {
     (*types.CnsKubernetesEntityMetadata)(0xc000b94960)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=40) "pvc-c939063e-eb9b-11e9-ad3e-005056851946",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=6) "app-pv",
         Value: (string) (len=13) "e2e-labels-pv"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=17) "PERSISTENT_VOLUME",
      Namespace: (string) ""
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94a00)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=5) "web-4",
       Labels: ([]types.KeyValue) <nil>,
       Delete: (bool) false
      },
      EntityType: (string) (len=3) "POD",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     }),
     (*types.CnsKubernetesEntityMetadata)(0xc000b94a50)({
      CnsEntityMetadata: (types.CnsEntityMetadata) {
       DynamicData: (types.DynamicData) {
       },
       EntityName: (string) (len=9) "www-web-4",
       Labels: ([]types.KeyValue) (len=1 cap=4) {
        (types.KeyValue) {
         DynamicData: (types.DynamicData) {
         },
         Key: (string) (len=3) "app",
         Value: (string) (len=5) "nginx"
        }
       },
       Delete: (bool) false
      },
      EntityType: (string) (len=23) "PERSISTENT_VOLUME_CLAIM",
      Namespace: (string) (len=29) "e2e-volume-label-updates-8485"
     })
    }
   },
   BackingObjectDetails: (types.CnsBackingObjectDetails) {
    DynamicData: (types.DynamicData) {
    },
    CapacityInMb: (int64) 1024
   },
   ComplianceStatus: (string) "",
   DatastoreAccessibilityStatus: (string) (len=10) "accessible",
   StoragePolicyId: (string) ""
  }
 },
 Cursor: (types.CnsCursor) {
  DynamicData: (types.DynamicData) {
  },
  Offset: (int64) 1,
  Limit: (int64) 100,
  TotalRecords: (int64) 1
 }
})

[1mSTEP[0m: Scaling down statefulsets to number of Replica: 0
Oct 10 13:24:27.570: INFO: Scaling statefulset web to 0
Oct 10 13:25:17.662: INFO: Waiting for statefulset status.replicas updated to 0
[1mSTEP[0m: Deleting all statefulsets in namespace: e2e-volume-label-updates-8485
Oct 10 13:25:17.688: INFO: Scaling statefulset web to 0
Oct 10 13:25:17.758: INFO: Waiting for statefulset status.replicas updated to 0
Oct 10 13:25:17.767: INFO: Deleting statefulset web
Oct 10 13:25:17.833: INFO: Deleting pvc: www-web-0 with volume pvc-648bb8b7-eb9b-11e9-ad3e-005056851946
Oct 10 13:25:17.848: INFO: Deleting pvc: www-web-1 with volume pvc-7bb04b12-eb9b-11e9-ad3e-005056851946
Oct 10 13:25:17.860: INFO: Deleting pvc: www-web-2 with volume pvc-8ab42c41-eb9b-11e9-ad3e-005056851946
Oct 10 13:25:17.871: INFO: Deleting pvc: www-web-3 with volume pvc-b023667d-eb9b-11e9-ad3e-005056851946
Oct 10 13:25:17.886: INFO: Deleting pvc: www-web-4 with volume pvc-c939063e-eb9b-11e9-ad3e-005056851946
Oct 10 13:25:17.932: INFO: Still waiting for pvs of statefulset to disappear:
pvc-648bb8b7-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-7bb04b12-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-8ab42c41-eb9b-11e9-ad3e-005056851946: {Phase:Bound Message: Reason:}
pvc-b023667d-eb9b-11e9-ad3e-005056851946: {Phase:Bound Message: Reason:}
pvc-c939063e-eb9b-11e9-ad3e-005056851946: {Phase:Bound Message: Reason:}
Oct 10 13:25:27.943: INFO: Still waiting for pvs of statefulset to disappear:
pvc-648bb8b7-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-8ab42c41-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-c939063e-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
Oct 10 13:25:37.942: INFO: Still waiting for pvs of statefulset to disappear:
pvc-8ab42c41-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
pvc-c939063e-eb9b-11e9-ad3e-005056851946: {Phase:Released Message: Reason:}
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/pkg/mod/k8s.io/kubernetes@v1.14.2/test/e2e/framework/framework.go:150
Oct 10 13:25:47.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[1mSTEP[0m: Destroying namespace "e2e-volume-label-updates-8485" for this suite.
Oct 10 13:25:54.042: INFO: Waiting up to 30s for server preferred namespaced resources to be successfully discovered
Oct 10 13:25:54.301: INFO: namespace e2e-volume-label-updates-8485 deletion completed in 6.337265536s
[AfterEach] [csi-block-e2e] label-updates
  /root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:103

[32m• [SLOW TEST:329.934 seconds][0m
[csi-block-e2e] label-updates
[90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:55[0m
  [csi-common-e2e] Verify label updates on PVC and PV attached to a stateful set.
  [90m/root/csi/src/sigs.k8s.io/vsphere-csi-driver/tests/e2e/labelupdates.go:591[0m
[90m------------------------------[0m

[1m[32mRan 26 of 45 Specs in 5493.874 seconds[0m
[1m[32mSUCCESS![0m -- [32m[1m26 Passed[0m | [91m[1m0 Failed[0m | [33m[1m0 Pending[0m | [36m[1m19 Skipped[0m
PASS

Ginkgo ran 1 suite in 1h31m43.768044844s
Test Suite Passed
