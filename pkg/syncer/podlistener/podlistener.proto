/*
Copyright 2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = 'proto3';

package podlistener;

// Interface exported by the server
service PodListener {
   /*
   * GetPodVMUUIDAnnotation gets the PV by querying the API server refering to the volumeID in the request.
   * Retrieves the PVC name and Namespace from the PV spec.
   *
   * It then gets the vmuuid annotation from the pod satisfying the below conditions
   * 1. Pod Scheduled on node with name "nodeName"
   * 2. Pod is in pending state in the same namespace as pvc specified using "pvcNamespace"
   * 3. Pod has a volume with name "pvcName" associated with it
   *
   * The annotation might not be available immediately when the Pod is created.
   * So polling the Pod periodically every pollInterval seconds to check if annotation is available.
   * If annotation is not available after a timeout period, the function errors out.
   */
  rpc GetPodVMUUIDAnnotation(PodListenerRequest) returns (PodListenerResponse) {}
}

message PodListenerRequest {
   // The volumeID that needs to be attached to the node. 
   string volumeID = 1;

   // Name of the node where the Pod is running.
   string nodeName = 2;
}

message PodListenerResponse {
   // VM UUID annotation of the pod.
   string vmuuidAnnotation = 1;
}

