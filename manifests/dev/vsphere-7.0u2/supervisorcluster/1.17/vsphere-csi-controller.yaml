apiVersion: v1
kind: Namespace
metadata:
  name: vmware-system-csi
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vsphere-csi-controller
  namespace: vmware-system-csi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-controller-role
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "configmaps", "resourcequotas"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "update", "create", "delete", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims/status"]
  verbs: ["update", "patch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: ["cns.vmware.com"]
  resources: ["cnsnodevmattachments", "cnsvolumemetadatas"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["cns.vmware.com"]
  resources: ["cnsregistervolumes"]
  verbs: ["get", "list", "watch", "update", "delete"]
- apiGroups: ["cns.vmware.com"]
  resources: ["storagepools"]
  verbs: ["get", "watch", "list", "delete", "update", "create", "patch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "create", "update"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- apiGroups: ["vmoperator.vmware.com"]
  resources: ["virtualmachines"]
  verbs: ["get", "list"]
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: vmware-system-csi
  name: vsphere-csi-secret-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-controller-binding
subjects:
- kind: ServiceAccount
  name: vsphere-csi-controller
  namespace: vmware-system-csi
roleRef:
  kind: ClusterRole
  name: vsphere-csi-controller-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csiRole
  namespace: vmware-system-csi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wcp-privileged-psp
subjects:
# For the kube-system nodes.
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:vmware-system-csi
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-provisioner-secret-binding
  namespace: vmware-system-csi
subjects:
- kind: ServiceAccount
  name: vsphere-csi-controller
  namespace: vmware-system-csi
roleRef:
  kind: Role
  name: vsphere-csi-secret-reader
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vsphere-csi-controller
  namespace: vmware-system-csi
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: vsphere-csi-controller
  template:
    metadata:
      labels:
        app: vsphere-csi-controller
        role: vsphere-csi
    spec:
      serviceAccount: vsphere-csi-controller
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: "Exists"
        key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
      - operator: "Equal"
        key: "kubeadmNode"
        effect: "NoSchedule"
        value: "master"
      hostNetwork: true
      containers:
      - name: csi-provisioner
        image: localhost:5000/vmware/csi-provisioner/csi-provisioner:v1.2.1_vmware.11
        args:
        - "--v=4"
        - "--timeout=300s"
        - "--csi-address=$(ADDRESS)"
        - "--feature-gates=Topology=true"
        - "--strict-topology"
        - "--enable-leader-election"
        - "--leader-election-type=leases"
        - "--enable-hostlocal-placement=true"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: KUBERNETES_SERVICE_HOST
          value: "127.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        - name: VSPHERE_CLOUD_OPERATOR_SERVICE_PORT
          value: "29000"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-attacher
        image: localhost:5000/vmware.io/csi-attacher:v2.0.0_vmware.1
        args:
        - "--v=4"
        - "--timeout=300s"
        - "--csi-address=$(ADDRESS)"
        - "--leader-election"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        - name: KUBERNETES_SERVICE_HOST
          value: "127.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: csi-resizer
        image: localhost:5000/vmware/kubernetes-csi_external-resizer/kubernetes-csi_external-resizer:v1.0.0_vmware.1
        imagePullPolicy: IfNotPresent
        args:
        - --v=4
        - --timeout=300s
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --kube-api-qps=100
        - --kube-api-burst=100
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      - name: vsphere-csi-controller
        image: localhost:5000/vmware/vsphere-csi:<vsphere_csi_ver>
        ports:
         - containerPort: 2112
           name: prometheus
           protocol: TCP
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -rf /var/lib/csi/sockets/pluginproxy/csi.vsphere.vmware.com"]
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: CLUSTER_FLAVOR
          value: "WORKLOAD"
        - name: X_CSI_MODE
          value: "controller"
        - name: KUBERNETES_SERVICE_HOST
          value: "127.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        - name: POD_LISTENER_SERVICE_PORT
          value: "29000"
        - name: VSPHERE_CSI_CONFIG
          value: "/etc/vmware/wcp/vsphere-cloud-provider.conf" # here vsphere-cloud-provider.conf is the name of the file used for creating secret using "--from-file" flag
        - name: LOGGER_LEVEL
          value: "PRODUCTION" # Options: DEVELOPMENT, PRODUCTION
        imagePullPolicy: "IfNotPresent"
        volumeMounts:
        - mountPath: /etc/vmware/wcp
          name: vsphere-config-volume
          readOnly: true
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: liveness-probe
        image: localhost:5000/vmware/csi-livenessprobe/csi-livenessprobe:v1.1.0
        args:
        - "--csi-address=$(ADDRESS)"
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - name: vsphere-syncer
        image: localhost:5000/vmware/syncer:<syncer_ver>
        args:
        - "--leader-election"
        env:
        - name: CLUSTER_FLAVOR
          value: "WORKLOAD"
        - name: KUBERNETES_SERVICE_HOST
          value: "127.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        - name: FULL_SYNC_INTERVAL_MINUTES
          value: "30"
        - name: VOLUME_HEALTH_INTERVAL_MINUTES
          value: "5"
        - name: POD_POLL_INTERVAL_SECONDS
          value: "2"
        - name: POD_LISTENER_SERVICE_PORT
          value: "29000"
        - name: VSPHERE_CSI_CONFIG
          value: "/etc/vmware/wcp/vsphere-cloud-provider.conf" # here vsphere-cloud-provider.conf is the name of the file used for creating secret using "--from-file" flag
        - name: LOGGER_LEVEL
          value: "PRODUCTION" # Options: DEVELOPMENT, PRODUCTION
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: 2113
            name: prometheus
            protocol: TCP
        volumeMounts:
        - mountPath: /etc/vmware/wcp
          name: vsphere-config-volume
          readOnly: true
      volumes:
      - name: vsphere-config-volume
        secret:
          secretName: vsphere-config-secret
      - name: socket-dir
        hostPath:
          path: /var/lib/csi/sockets/pluginproxy/csi.vsphere.vmware.com
          type: DirectoryOrCreate
---
apiVersion: storage.k8s.io/v1beta1
kind: CSIDriver
metadata:
  name: csi.vsphere.vmware.com
spec:
  attachRequired: true
  podInfoOnMount: false
---
apiVersion: v1
data:
  "volume-extend": "true"
  "volume-health": "true"
kind: ConfigMap
metadata:
  name: csi-feature-states
  namespace: vmware-system-csi
---
apiVersion: v1
kind: Service
metadata:
  name: vsphere-csi-controller
  namespace: vmware-system-csi
  labels:
    app: vsphere-csi-controller
spec:
  ports:
    - name: ctlr
      port: 2112
      targetPort: 2112
      protocol: TCP
    - name: syncer
      port: 2113
      targetPort: 2113
      protocol: TCP
  selector:
    app: vsphere-csi-controller
