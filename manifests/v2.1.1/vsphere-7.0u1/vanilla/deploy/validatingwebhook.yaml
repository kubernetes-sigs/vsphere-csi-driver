# Requires k8s 1.19+
---
apiVersion: v1
kind: Service
metadata:
  name: vsphere-webhook-svc
  namespace: kube-system
  labels:
    app: vsphere-csi-webhook
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: vsphere-csi-webhook
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.csi.vsphere.vmware.com
webhooks:
  - name: validation.csi.vsphere.vmware.com
    clientConfig:
      service:
        name: vsphere-webhook-svc
        namespace: kube-system
        path: "/validate"
      caBundle: ${CA_BUNDLE}
    rules:
      - apiGroups:   ["storage.k8s.io"]
        apiVersions: ["v1", "v1beta1"]
        operations:  ["CREATE", "UPDATE"]
        resources:   ["storageclasses"]
    sideEffects: None
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: vsphere-csi-webhook
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-role
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vsphere-csi-webhook-role-binding
subjects:
  - kind: ServiceAccount
    name: vsphere-csi-webhook
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: vsphere-csi-webhook-role
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: vsphere-csi-webhook
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vsphere-csi-webhook
  template:
    metadata:
      labels:
        app: vsphere-csi-webhook
        role: vsphere-csi-webhook
    spec:
      serviceAccountName: vsphere-csi-webhook
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - operator: "Exists"
          effect: NoSchedule
        - operator: "Exists"
          effect: NoExecute
      dnsPolicy: "Default"
      containers:
        - name: vsphere-webhook
          image: gcr.io/cloud-provider-vsphere/csi/release/syncer:v2.1.1
          args:
            - "--operation-mode=WEBHOOK_SERVER"
            - "--fss-name=internal-feature-states.csi.vsphere.vmware.com"
            - "--fss-namespace=$(CSI_NAMESPACE)"
          imagePullPolicy: "Always"
          env:
            - name: WEBHOOK_CONFIG_PATH
              value: "/etc/webhook/webhook.config"
            - name: LOGGER_LEVEL
              value: "PRODUCTION" # Options: DEVELOPMENT, PRODUCTION
            - name: CSI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /etc/webhook
              name: webhook-certs
              readOnly: true
      volumes:
        - name: socket-dir
          emptyDir: {}
        - name: webhook-certs
          secret:
            secretName: vsphere-webhook-certs